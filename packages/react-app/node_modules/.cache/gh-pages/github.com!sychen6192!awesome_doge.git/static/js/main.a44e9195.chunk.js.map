{"version":3,"sources":["history.js","components/Header/index.js","components/Jumbotron/index.js","components/CurrencyInputPanel/index.js","components/Pages/SwapPage.js","components/LiquidityInputPanel/index.js","components/Pages/PoolPage.js","components/Pages/PolicyPage.js","components/Pages/StakePage.js","components/StakeInputPanel/index.js","components/Pages/StakeItem.js","components/Pages/ClaimsPage.js","hooks/useWeb3Modal.js","components/Pages/RegisterPage.js","components/Pages/StakeholdersPage.js","App.js","index.js","../../contracts/src/abis.js","../../contracts/src/addresses.js","components/PolicyInputPanel/index.js","ipfs.js"],"names":["createHistory","require","createBrowserHistory","useStyles","makeStyles","theme","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","background","toolbar","flexWrap","toolbarTitle","flexGrow","color","link","spacing","walletButton","borderColor","borderRadius","Header","provider","loadWeb3Modal","logoutOfWeb3Modal","classes","useState","setNetwork","account","setAccount","WalletButton","Button","variant","className","onClick","useEffect","a","getNetwork","name","network","listAccounts","slice","AppBar","position","elevation","Toolbar","Typography","noWrap","Link","href","main","marginBottom","height","boxShadow","backgroundColor","text","fontWeight","Jumbotron","title","description","Container","component","maxWidth","gutterBottom","container","marginTop","root","CardContent","paddingTop","GridContainer","bullet","display","transform","fontSize","pos","align","FormContent","width","border","disabledFormContent","symbol","max","opacity","lineHeight","cursor","currencyInput","textAlign","boxSizing","appearance","outline","swapButton","float","loading","CurrencyInputPanel","ethers","providers","Web3Provider","window","ethereum","ETHAmount","setETHAmount","SYCAmount","setSYCAmount","setSYCPrice","ETHPrice","setETHPrice","setLoading","totoken","setTotoken","approveAlready","setApproveAlready","setNetworkId","getPairAmount","SycWethExchangeContract","Contract","addresses","RINKEBY_ID","pairs","abis","pair","getReserves","reserves","k","mul","ETHAmountSubFee","parseFloat","toString","y","utils","parseUnits","add","x","formatEther","sub","div","SYCAmountSubFee","console","log","changeDirection","onSwap","signer","getSigner","implemetationContract","implementation","implemetation","swapETHToSyc","value","parseEther","tx","swapSycForETH","waitForTransaction","hash","erc20Contract","tokens","SYC","erc20","abi","approve","onMax","getAddress","getBalance","balance","networkId","chainId","SycContract","allowance","gte","getNetworkId","getApproveState","isNaN","fetchPrice","getETHPrice","axios","get","priceInfo","data","price","getSYCPrice","Card","Grid","item","xs","sm","style","justifyContent","e","placeholder","onChange","target","toFixed","alignItems","disabled","CircularProgress","size","marginRight","onApprove","SwapPage","LiquidityInputPanel","props","ratio","setRatio","router01Contract","router01","converted","params","addLiquidityETH","policyAddress","ratioFloat","getRatio","onProvide","PoolPage","PolicyPage","PolicyInputPanel","StakePage","policies","setPolicies","policyFactoryContract","policyFactory","getDeloyedPolicies","Promise","all","map","address","index","policy","getSummary","allPolicies","getPolicies","Object","values","element","idx","key","rel","textDecoration","CardActions","RouterLink","to","renderList","refCode","setRefCode","policyContract","stakePolicy","ether","TextField","required","fullWidth","id","label","StakeItem","setPolicyAddress","minPremium","setminPremium","deployedPolicies","match","policiesAddress","policyInfo","table","minWidth","wrapper","buttonProgress","top","left","backdrop","zIndex","drawer","ClaimsPage","requests","setRequests","stakeHoldersCount","setStakeHoldersCount","delegatorCount","setDelegatorCount","requestCount","setRequestCount","isDelegator","setIsDelegator","content","setContent","multiple","setMultiple","refreshPage","location","reload","delApproveRequest","approveRequest","createRequest","erc721Contract","ATP","erc721","setApprovalForAll","claimRequest","getPolicyStakeholders","policyStakeHolders","getRequestsCount","registryContract","registry","getDelegatorCount","validDelegators","length","parseInt","Array","fill","reverse","Backdrop","open","Paper","CssBaseline","paper","form","noValidate","ButtonGroup","aria-label","approveToken","Request","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","request","complete","scope","description_URI","requester","Box","approvalCount","bottom","right","Math","round","delApprovalCount","Claim","Approve","delApprove","INFURA_ID","useWeb3Modal","config","setProvider","autoLoaded","setAutoLoaded","autoLoad","infuraId","NETWORK","web3Modal","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","useCallback","connect","newProvider","clearCachedProvider","cachedProvider","image","backgroundImage","backgroundRepeat","type","grey","backgroundSize","backgroundPosition","flexDirection","avatar","secondary","submit","SignInSide","setLogin","setData","setOpen","refcode","setRefcode","getRefCode","register","getAccount","md","square","Avatar","appId","fields","callback","response","accessToken","cssClass","textButton","StakeholdersPage","stakeHolders","setStakeHolders","stakeHoldersAddress","setStakeHoldersAddress","endorsers","setEndorsers","mapInsurers","stakeholders","endorser","stakeHolder","userName","App","history","path","exact","RegisterPage","client","ApolloClient","uri","ReactDOM","render","document","getElementById","factory","router02","commonContracts","DAI","WETH","AMPL","BAT","COMP","LEND","LINK","MKR","USDC","USDT","wBTC","marginLeft","textField","policyName","setPolicyName","policyType","setPolicyType","policyContent","setPolicyContent","policyPremium","setPolicyPremium","Date","policyStart","setPolicyStart","policyEnd","setPolicyEnd","policyDeadline","setPolicyDeadline","buffer","setBuffer","dateToUnix","date","getTime","captureFile","event","preventDefault","file","files","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","from","result","ipfs","postResponse","createPolicy","DateFnsUtils","justify","icon","InputProps","startAdornment","select","helperText","disablePast","showTodayButton","accept","input","htmlFor","button","startIcon","ipfsApi","host","port","protocol"],"mappings":"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","file":"static/js/main.a44e9195.chunk.js","sourcesContent":["const createHistory = require(\"history\").createBrowserHistory\n\nexport default createHistory();","import React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport ReactDOM from 'react-dom';\n \n\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n      ul: {\n        margin: 0,\n        padding: 0,\n        listStyle: 'none',\n      },\n    },\n    appBar: {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      background: '#393C42'\n    },\n    toolbar: {\n      flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n      flexGrow: 1,\n      color: '#ECEDED',\n    },\n    link: {\n      margin: theme.spacing(1, 1.5),\n      color: '#ECEDED',\n    },\n    walletButton: {\n      color: '#24947A',\n      borderColor: '#24947A',\n      borderRadius: '50px'\n    }\n  }));\n\n\n\nexport default function Header({ provider, loadWeb3Modal, logoutOfWeb3Modal }) {\n    const classes = useStyles();\n    const [network, setNetwork] = useState('No network detected');\n    const [account, setAccount] = useState('Connect Metamask');\n\n    useEffect(() => {\n        const getNetwork = async () => {\n            if (provider) {\n                const network = await provider.getNetwork().name\n                const account = await provider.listAccounts()\n                setNetwork(network)\n                setAccount(account[0].slice(0, 6)+'...'+account[0].slice(-4))\n            }\n        }\n        getNetwork();\n    }, [provider])\n\n    function WalletButton({ provider, loadWeb3Modal, logoutOfWeb3Modal }) {\n        return (\n            <Button variant=\"outlined\" className={classes.walletButton}\n                onClick={() => {\n                    if (!provider) {\n                        loadWeb3Modal();\n                    } else {\n                        logoutOfWeb3Modal();\n                    }\n                }}\n            >\n                {account}\n            </Button>\n        );\n    }\n\n    return (\n        <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle} >\n            Sycoin Mutual Insurance\n          </Typography>\n          <nav>\n            <Link variant=\"button\" href=\"/\" className={classes.link}>\n              SWAP\n            </Link>\n            <Link variant=\"button\" href=\"/pool\" className={classes.link}>\n              Pool\n            </Link>\n            <Link variant=\"button\" href=\"/staking\" className={classes.link}>\n              Project\n            </Link>\n            <Link variant=\"button\" href=\"/policy/new\" className={classes.link}>\n              Propose\n            </Link>\n            <Link variant=\"button\" href=\"/register\" className={classes.link}>\n              Register\n            </Link>\n          </nav>\n            <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal} />\n        </Toolbar>\n      </AppBar>\n    );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    main: {\n        marginBottom: theme.spacing(2),\n        height: '8rem',\n        padding: '1.5rem 2rem 2rem 2rem',\n        boxShadow: 'rgba(200, 210, 225, 0.698) 4px 6px 23px 0px, rgb(200, 210, 225) 1px 2px 4px 0px',\n        backgroundColor: '#FFFFFF'\n    },\n    text: {\n        fontWeight: '600',\n        color: '#505050'\n    },\n}));\n\nexport default function Jumbotron({ title, description }) {\n\n    const classes = useStyles()\n    \n    return (\n        <Container component=\"main\" className={classes.main} maxWidth='lg' >\n                <Typography variant=\"h4\" component=\"h4\" className={classes.text} gutterBottom>\n                    {title}\n                </Typography>\n                <Typography variant=\"subtitle1\" component=\"h2\" className={classes.text} gutterBottom>\n                    {description}\n                </Typography>\n            </Container>\n\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { ethers } from \"ethers\";\nimport styled from 'styled-components';\nimport { ChainId, Token, WETH, Fetcher, Route } from '@uniswap/sdk'\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport axios from 'axios';\n\n\n\n// const projectId = \"66fbccb2856b40b3a622d925568379e9\";\n// const projectSecret = \"275ed56f36e440e0ab7cad94a3310aae\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: \"20px\",\n  },\n  root: {\n  },\n  CardContent: {\n    backgroundColor: '#FFFFFF',\n    paddingTop: '2rem',\n    padding: '0px 2rem 2rem'\n  },\n  GridContainer: {\n    padding: '0px 30px 30px 0px'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  pos: {\n    marginBottom: 12,\n    align: 'right',\n\n  },\n  FormContent: {\n    padding: '0.5rem 1rem',\n    marginBottom: '1rem',\n    borderRadius: '1rem',\n    width: '100%',\n    border: '1px solid rgb(228, 232, 239)',\n    color: 'rgb(80, 80, 80)',\n    boxShadow: 'rgb(0 0 0 / 4%) 0px 1px 6px inset',\n  },\n  disabledFormContent: {\n    padding: '0.5rem 1rem',\n    marginBottom: '1rem',\n    borderRadius: '1rem',\n    width: '100%',\n    border: '1px solid rgb(228, 232, 239)',\n    color: 'rgb(80, 80, 80)',\n    boxShadow: 'rgb(0 0 0 / 4%) 0px 1px 6px inset',\n    background: 'rgb(228, 232, 239)'\n  },\n  symbol: {\n    fontSize: '1.5rem'\n  },\n  max: {\n    display: 'inline',\n    opacity: '1',\n    lineHeight: '1rem',\n    color: 'rgb(96, 211, 162)',\n    cursor: 'pointer'\n  },\n  currencyInput: {\n    padding: '1rem 1rem 1rem 0px',\n    textAlign: 'right',\n    border: 'none',\n    fontSize: '1.5rem',\n    fontWeight: '400',\n    width: '100%',\n    boxSizing: 'border-box',\n    appearance: 'none',\n    outline: 'none',\n    \"&:focus\": {\n      outline: 'none !important',\n    }\n  },\n  swapButton: {\n    color: '#24947A',\n    borderColor: '#24947A',\n    borderRadius: '50px',\n    float: 'right',\n    width: '100px',\n    fontSize: '14px',\n    loading: ''\n  }\n}));\n\n\n\nexport default function CurrencyInputPanel() {\n  const classes = useStyles()\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const [ETHAmount, setETHAmount] = useState('');\n  const [SYCAmount, setSYCAmount] = useState('');\n  const [SYCPrice, setSYCPrice] = useState(0);\n  const [ETHPrice, setETHPrice] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [totoken, setTotoken] = useState(true);\n  const [approveAlready, setApproveAlready] = useState(false);\n  const [networkId, setNetworkId] = useState(0);\n\n  useEffect(() => {\n      async function getNetworkId() {\n          const provider = new ethers.providers.Web3Provider(window.ethereum)\n          const networkId = await provider.getNetwork()\n          setNetworkId(networkId.chainId) \n      }\n      async function getApproveState() {\n        const SycContract = new Contract(addresses[RINKEBY_ID].tokens.SYC, abis.erc20.abi, provider);\n        const account = await provider.listAccounts()\n        const approveState = await SycContract.allowance(account[0], addresses[RINKEBY_ID].implementation)\n\n        approveState.gte('5742700000000000000000000') ? setApproveAlready(true):setApproveAlready(false)\n      }\n      getNetworkId();\n      getApproveState();\n  }, [])\n\n\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      if (!isNaN(ETHAmount) && ETHAmount && totoken) {\n        setSYCAmount(await getPairAmount())\n      } else if (!isNaN(SYCAmount) && SYCAmount && !totoken) {\n        setETHAmount(await getPairAmount())\n      } else if (ETHAmount === '' || SYCAmount === '') {\n        setSYCAmount('');\n        setETHAmount('');\n      }\n    }\n    fetchPrice();\n  }, [ETHAmount, SYCAmount, totoken]);\n\n  useEffect(() => {\n    const getETHPrice = async () => {\n      const priceInfo = await axios.get('https://api.binance.com/api/v3/ticker/price?symbol=ETHUSDT')\n      setETHPrice(priceInfo.data.price)\n    }\n    const getSYCPrice = async () => {\n      const SycWethExchangeContract = new Contract(addresses[RINKEBY_ID].pairs[\"SYC-WETH\"], abis.pair, provider);\n      const reserves = await SycWethExchangeContract.getReserves();\n      // reserves[0] is ETHER, reserves[1] is SYCoin\n      const k = reserves[0].mul(reserves[1])\n      if (totoken) {\n        const y = ethers.utils.parseUnits('0.997', \"ether\").add(reserves[0])\n        const x = ethers.utils.formatEther(reserves[1].sub(k.div(y)));\n        setSYCPrice(x.toString())\n      } else {\n        const y = ethers.utils.parseUnits('0.997', \"ether\").add(reserves[1])\n        const x = ethers.utils.formatEther(reserves[0].sub(k.div(y)));\n        setSYCPrice(x.toString())\n      }\n    }\n    getETHPrice();\n    getSYCPrice();\n  }, [totoken])\n\n\n  async function getPairAmount() {\n    try {\n\n      const SycWethExchangeContract = new Contract(addresses[RINKEBY_ID].pairs[\"SYC-WETH\"], abis.pair, provider);\n      const reserves = await SycWethExchangeContract.getReserves();\n      // reserves[0] is SYC, reserves[1] is ETHER\n      const k = reserves[0].mul(reserves[1])\n      let ETHAmountSubFee, SYCAmountSubFee, x, y;\n      // fee to dev 0.3%\n      if (totoken) {\n        ETHAmountSubFee = (parseFloat(ETHAmount) * 0.997).toString();\n        y = ethers.utils.parseUnits(ETHAmountSubFee, \"ether\").add(reserves[0])\n        x = ethers.utils.formatEther(reserves[1].sub(k.div(y)));\n\n      } else {\n        SYCAmountSubFee = (parseFloat(SYCAmount) * 0.997).toString();\n        y = ethers.utils.parseUnits(SYCAmountSubFee, \"ether\").add(reserves[1])\n        x = ethers.utils.formatEther(reserves[0].sub(k.div(y)));\n\n      }\n      return x.toString();\n\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  function changeDirection() {\n    setTotoken(!totoken);\n    setSYCAmount('');\n    setETHAmount('');\n  }\n\n\n  async function onSwap() {\n    try {\n      let tx;\n      setLoading(true);\n      const signer = provider.getSigner()\n      const implemetationContract = new Contract(addresses[RINKEBY_ID].implementation, abis.implemetation, signer);\n      if (totoken) {\n        tx = await implemetationContract.swapETHToSyc({ value: ethers.utils.parseEther(ETHAmount) });\n      } else {\n        tx = await implemetationContract.swapSycForETH(ethers.utils.parseEther(SYCAmount));\n      }\n      // until transactionHash is mined.\n      await provider.waitForTransaction(tx.hash);\n      setLoading(false);\n      console.log(tx);\n    } catch (err) {\n      console.log(err)\n    }\n    setLoading(false);\n  }\n\n  async function onApprove() {\n    try {\n      setLoading(true);\n      const signer = provider.getSigner()\n      const erc20Contract = new Contract(addresses[RINKEBY_ID].tokens.SYC, abis.erc20.abi, signer);\n      let tx = await erc20Contract.approve(\n        addresses[RINKEBY_ID].implementation,\n        '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n      );\n      await provider.waitForTransaction(tx.hash);\n      setLoading(false);\n      setApproveAlready(true);\n    } catch (err) {\n      console.log(err)\n    }\n    setLoading(false);\n  }\n\n  async function onMax() {\n    const signer = provider.getSigner()\n    const account = await signer.getAddress()\n    const balance = await provider.getBalance(account)\n    setETHAmount(ethers.utils.formatEther(balance.toString()))\n  }\n\n\n  if (totoken) {\n    return (\n      <div>\n        <Container className={classes.container} maxWidth='lg'>\n          <Card className={classes.root}>\n            <CardContent className={classes.CardContent}>\n              <Grid container className={classes.GridContainer} spacing={10}>\n                <Grid item xs={12} sm={5}>\n                  <Card className={classes.FormContent}>\n                    <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\n                      <Typography className={classes.title} color=\"textPrimary\">\n                        Amount\n                      </Typography>\n                      <Button className={classes.max} onClick={e => {onMax()}}>\n                        Max\n                      </Button>\n                    </div>\n                    <div style={{ display: \"flex\" }}>\n                    <input \n                    className={classes.currencyInput}\n                    placeholder=\"0\"\n                    onChange={e => setETHAmount(e.target.value)}\n                    value={ETHAmount}\n                    />\n                    <Button align='right' className={classes.symbol} display='inlign'>\n                      ETH\n                    </Button>\n                    </div>\n                    \n                    <Typography className={classes.pos} color=\"textSecondary\" align='right'>\n                      ~${(ETHPrice * ETHAmount).toFixed(2)}\n                    </Typography>\n                  </Card>\n                </Grid>\n                <Grid item xs={12} sm={2}>\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n                    <i \n                    className=\"fas fa-exchange-alt fa-2x\" \n                    onClick={e => changeDirection(false)}\n                    style={{cursor: 'pointer'}} />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={5} style={{ cursor: 'not-allowed'}}>\n                <Card className={classes.disabledFormContent}>\n                    <div disabled style={{ display: \"flex\" }}>\n                      <Typography className={classes.title} color=\"textPrimary\">\n                      Amount to be received (estimated)\n                      </Typography>\n                    </div>\n                    <div style={{ display: \"flex\" }}>\n                    <input \n                    className={classes.currencyInput}\n                    disabled\n                    style={{cursor: 'not-allowed', background: 'rgb(228, 232, 239)'}}\n                    value={SYCAmount}\n                    />\n                    <Button align='right' className={classes.symbol} display='inlign'>\n                      SYC\n                    </Button>\n                    </div>\n                    <Typography className={classes.pos} color=\"textSecondary\" align='right'>\n                     {SYCAmount ? `${parseFloat(SYCAmount / ETHAmount).toFixed(3)} SYC per ETH`: '🤔 SYC per ETH'}\n                    </Typography>\n                  </Card>\n                </Grid>\n              </Grid>\n              <div style={{ 'marginRight': '0' }}>\n                <Button \n                  variant=\"outlined\" \n                  className={classes.swapButton}\n                  onClick={e => onSwap()}\n                  >\n                  {loading && <CircularProgress size={14} />}\n                  {!loading && 'SWAP'}   \n                </Button>\n              </div> \n            </CardContent>\n          </Card>\n        </Container>\n        \n      </div>\n    );\n  } else {\n    return (\n      <div>\n      <Container className={classes.container} maxWidth='lg'>\n        <Card className={classes.root}>\n          <CardContent className={classes.CardContent}>\n            <Grid container className={classes.GridContainer} spacing={10}>\n              <Grid item xs={12} sm={5}>\n                <Card className={classes.FormContent}>\n                  <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\n                    <Typography className={classes.title} color=\"textPrimary\">\n                      Amount\n                    </Typography>\n                    <Button className={classes.max} onClick={e => {onMax()}}>\n                      Max\n                    </Button>\n                  </div>\n                  <div style={{ display: \"flex\" }}>\n                  <input \n                  className={classes.currencyInput}\n                  placeholder=\"0\"\n                  onChange={e => setSYCAmount(e.target.value)}\n                  value={SYCAmount}\n                  />\n                  <Button align='right' className={classes.symbol} display='inlign'>\n                    SYC\n                  </Button>\n                  </div>\n                  \n                  <Typography className={classes.pos} color=\"textSecondary\" align='right'>\n                    ~${ETHAmount ? `${(ETHAmount / SYCAmount * ETHPrice).toFixed(2)}`: '0.00'}\n                  </Typography>\n                </Card> \n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n                  <i \n                  className=\"fas fa-exchange-alt fa-2x\"\n                  onClick={e => changeDirection(false)}\n                  style={{cursor: 'pointer'}} />\n                </div>\n              </Grid>\n              <Grid item xs={12} sm={5} style={{ cursor: 'not-allowed'}}>\n              <Card className={classes.disabledFormContent}>\n                  <div disabled style={{ display: \"flex\" }}>\n                    <Typography className={classes.title} color=\"textPrimary\">\n                    Amount to be received (estimated)\n                    </Typography>\n                  </div>\n                  <div style={{ display: \"flex\" }}>\n                  <input \n                  className={classes.currencyInput}\n                  disabled\n                  style={{cursor: 'not-allowed', background: 'rgb(228, 232, 239)'}}\n                  value={ETHAmount}\n                  />\n                  <Button align='right' className={classes.symbol} display='inlign'>\n                    ETH\n                  </Button>\n                  </div>\n                  <Typography className={classes.pos} color=\"textSecondary\" align='right'>\n                  {ETHAmount ? `${parseFloat(ETHAmount / SYCAmount).toFixed(6)} ETH per SYC`: '🤔 ETH per SYC'}\n                  </Typography>\n                </Card>\n              </Grid>\n            </Grid>\n            <div style={{ marginRight: '0' }}>\n            <Button \n              variant=\"outlined\" \n              className={classes.swapButton}\n              onClick={e => onSwap()}\n              disabled={!approveAlready}\n              >SWAP\n            </Button>\n            <Button style={{ marginRight: '10px' }}\n              variant=\"outlined\" \n              className={classes.swapButton}\n              onClick={e => onApprove()}\n              disabled={approveAlready}\n              >Approve\n            </Button> \n            </div>\n          </CardContent>\n        </Card>\n      </Container>\n    </div>\n\n    )\n  }\n\n}","import React, { useEffect, useState } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport CurrencyInputPanel from '../CurrencyInputPanel';\nimport { ethers } from \"ethers\";\n\n\n\nexport default function SwapPage() {\n\n\n    \n    return (\n        <div>\n            <Jumbotron title=\"Swap\" description=\"Buy or sell SYC tokens. SYC tokens grant you proportional power in the mutual.\" />\n            <CurrencyInputPanel />\n            \n        </div>\n    );\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { ethers } from \"ethers\";\nimport styled from 'styled-components';\nimport { ChainId, Token, WETH, Fetcher, Route } from '@uniswap/sdk'\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport { Button, CircularProgress} from '@material-ui/core';\nimport axios from 'axios';\n\n\n\n// const projectId = \"66fbccb2856b40b3a622d925568379e9\";\n// const projectSecret = \"275ed56f36e440e0ab7cad94a3310aae\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: \"20px\",\n  },\n  root: {\n  },\n  CardContent: {\n    backgroundColor: '#FFFFFF',\n    paddingTop: '2rem',\n    padding: '0px 2rem 2rem'\n  },\n  GridContainer: {\n    padding: '0px 30px 30px 0px'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  FormContent: {\n    padding: '0.5rem 1rem',\n    marginBottom: '1rem',\n    borderRadius: '1rem',\n    width: '100%',\n    border: '1px solid rgb(228, 232, 239)',\n    color: 'rgb(80, 80, 80)',\n    boxShadow: 'rgb(0 0 0 / 4%) 0px 1px 6px inset',\n  },\n  disabledFormContent: {\n    padding: '0.5rem 1rem',\n    marginBottom: '1rem',\n    borderRadius: '1rem',\n    width: '100%',\n    border: '1px solid rgb(228, 232, 239)',\n    color: 'rgb(80, 80, 80)',\n    boxShadow: 'rgb(0 0 0 / 4%) 0px 1px 6px inset',\n  },\n  symbol: {\n    fontSize: '1.5rem'\n  },\n  max: {\n    display: 'inline',\n    opacity: '1',\n    lineHeight: '1rem',\n    color: 'rgb(96, 211, 162)',\n    cursor: 'pointer'\n  },\n  currencyInput: {\n    padding: '1rem 1rem 1rem 0px',\n    textAlign: 'right',\n    border: 'none',\n    fontSize: '1.5rem',\n    fontWeight: '400',\n    width: '100%',\n    boxSizing: 'border-box',\n    appearance: 'none',\n    outline: 'none',\n    \"&:focus\": {\n      outline: 'none !important',\n    }\n  },\n  swapButton: {\n    color: '#24947A',\n    borderColor: '#24947A',\n    borderRadius: '50px',\n    float: 'right',\n    width: '100px',\n    loading: ''\n  }\n}));\n\n\n\nexport default function LiquidityInputPanel(props) {\n  const classes = useStyles()\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const [ETHAmount, setETHAmount] = useState('');\n  const [SYCAmount, setSYCAmount] = useState('');\n  const [ETHPrice, setETHPrice] = useState(0);\n  const [SYCPrice, setSYCPrice] = useState(0);\n  const [ratio, setRatio] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [totoken, setTotoken] = useState(true);\n  const [approveAlready, setApproveAlready] = useState(false);\n  const [networkId, setNetworkId] = useState(0);\n  const [refCode, setRefCode] = useState('');\n  useEffect(() => {\n      async function getNetworkId() {\n          const provider = new ethers.providers.Web3Provider(window.ethereum)\n          const networkId = await provider.getNetwork()\n          setNetworkId(networkId.chainId)\n      \n      }\n      async function getApproveState() {\n        const SycContract = new Contract(addresses[RINKEBY_ID].tokens.SYC, abis.erc20.abi, provider);\n        const account = await provider.listAccounts()\n        if (props.policyAddress) {\n          const approveState = await SycContract.allowance(account[0], props.policyAddress)\n          approveState.gte('5742700000000000000000000') ? setApproveAlready(true):setApproveAlready(false)\n        }\n       \n      }\n      getNetworkId();\n      getApproveState();\n  }, [props])\n\n\n  useEffect(() => {\n    const getETHPrice = async () => {\n      const priceInfo = await axios.get('https://api.binance.com/api/v3/ticker/price?symbol=ETHUSDT')\n      setETHPrice(priceInfo.data.price)\n    }\n    const getSYCPrice = async () => {\n      const SycWethExchangeContract = new Contract(addresses[RINKEBY_ID].pairs[\"SYC-WETH\"], abis.pair, provider);\n      const reserves = await SycWethExchangeContract.getReserves();\n      // reserves[0] is SYC, reserves[1] is ETHER\n      const k = reserves[0].mul(reserves[1])\n      const y = ethers.utils.parseUnits('0.997', \"ether\").add(reserves[0])\n      const x = ethers.utils.formatEther(reserves[1].sub(k.div(y)));\n      setSYCPrice(x.toString())\n    }\n    const getRatio = async () => {\n      const SycWethExchangeContract = new Contract(addresses[RINKEBY_ID].pairs[\"SYC-WETH\"], abis.pair, provider);\n      const reserves = await SycWethExchangeContract.getReserves();\n      // reserves[0] is SYC, reserves[1] is ETHER\n      // BigNumber supports only interger so we need to multiply 1000\n      const ratio = reserves[0].mul(\"10000000\").div(reserves[1]);\n      const ratioFloat = parseFloat(ratio.toString()) / 10000000;\n      setRatio(ratioFloat.toString());\n    }\n    // ratio firstttt\n    getRatio();\n    getETHPrice();\n    getSYCPrice();\n  }, [totoken])\n\n  async function onProvide() {\n    try {\n      let tx;\n      setLoading(true);\n      console.log(ETHAmount, SYCAmount)\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const signer = provider.getSigner()\n      const account = await signer.getAddress()\n\n      const router01Contract = new Contract(addresses[RINKEBY_ID].router01, abis.router01, signer)\n      const converted = ethers.utils.parseEther(SYCAmount.toString())\n      let params = {\n        value: ethers.utils.parseEther(ETHAmount.toString())\n      }\n      tx =  await router01Contract.addLiquidityETH(addresses[RINKEBY_ID].tokens.SYC, converted, converted, params.value, account, \"100000000000000000000\", params);\n      // until transactionHash is mined.\n      await provider.waitForTransaction(tx.hash);\n      setLoading(false);\n      console.log(tx);\n    } catch (err) {\n      console.log(err)\n    }\n    setLoading(false);\n  }\n\n  async function onApprove() {\n    try {\n      setLoading(true);\n      const signer = provider.getSigner()\n      const erc20Contract = new Contract(addresses[RINKEBY_ID].tokens.SYC, abis.erc20.abi, signer);\n      let tx = await erc20Contract.approve(\n        addresses[RINKEBY_ID].router01,\n        '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n      );\n      await provider.waitForTransaction(tx.hash);\n      setLoading(false);\n      setApproveAlready(true);\n    } catch (err) {\n      console.log(err)\n    }\n    setLoading(false);\n  }\n\n\n    return (\n      <div>\n        <Container className={classes.container} maxWidth='lg'>\n          <Card className={classes.root}>\n            <CardContent className={classes.CardContent}>\n              <Grid container className={classes.GridContainer} spacing={10}>\n                <Grid item xs={12} sm={5}>\n                \n                  <Card className={classes.disabledFormContent}>\n                    <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\n                      <Typography className={classes.title} color=\"textPrimary\">\n                        Input\n                      </Typography>\n                    \n                    </div>\n                    <div style={{ display: \"flex\" }}>\n                    <input \n                    className={classes.currencyInput}\n                    placeholder=\"0.0\"\n                    value={ETHAmount}\n                    onChange={e=> {setETHAmount(e.target.value); setSYCAmount(e.target.value / ratio)}}\n                    />\n                    <Button align='right' className={classes.symbol} display='inlign'>\n                      ETH\n                    </Button>\n                    </div>\n                    \n                    <Typography className={classes.pos} color=\"textSecondary\" align='right'>\n                      {(1 / ratio).toFixed(4)} SYC per ETH\n                    </Typography>\n                  </Card>\n                </Grid>\n                <Grid item xs={12} sm={2}>\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n                    <i \n                    className=\"fa fa-plus fa-2x\" \n                    />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={5}>\n                <Card className={classes.disabledFormContent}>\n                    <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\n                      <Typography className={classes.title} color=\"textPrimary\">\n                      Input\n                      </Typography>\n                    </div>\n                    <div style={{ display: \"flex\" }}>\n                    <input \n                    className={classes.currencyInput}\n                    placeholder=\"0.0\"\n                    value={SYCAmount}\n                    onChange={e=> {setSYCAmount(e.target.value); setETHAmount(e.target.value * ratio )}}\n                    />\n                    <Button align='right' className={classes.symbol} display='inlign'>\n                      SYC\n                    </Button>\n                    </div>\n                    <Typography className={classes.pos} color=\"textSecondary\" align='right'>\n                     {ratio} ETH per SYC\n                    </Typography>\n                  </Card>\n                </Grid>\n              </Grid>\n              <div style={{ 'marginRight': '0' }}>\n                <Button \n                  variant=\"outlined\" \n                  className={classes.swapButton}\n                  onClick={e => onProvide()}\n                  disabled={!approveAlready}\n                  >\n                  {loading && <CircularProgress size={14} />}\n                  {!loading && 'Provide'}    \n                </Button>\n                <Button style={{ marginRight: '10px' }}\n                  variant=\"outlined\" \n                  className={classes.swapButton}\n                  onClick={e => onApprove()}\n                  disabled={approveAlready}\n                  >\n                  {loading && <CircularProgress size={14} />}\n                  {!loading && 'Approve'}    \n                </Button>\n              </div> \n            </CardContent>\n          </Card>\n        </Container>\n        \n      </div>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport LiquidityInputPanel from '../LiquidityInputPanel';\nimport { ethers } from \"ethers\";\n\n\n\nexport default function PoolPage() {\n\n\n    \n    return (\n        <div>\n            <Jumbotron title=\"Provide Liquidity\" description=\"Liquidity providers earn a 0.3% fee on all trades proportional to their share of the pool.\" />\n            <LiquidityInputPanel />\n        </div>\n    );\n}\n\n\n","import React, { useState } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport PolicyInputPanel from '../PolicyInputPanel';\n\n\nexport default function PolicyPage() {\n\n    return (\n        <div>\n            <Jumbotron \n            title=\"Policies\" \n            description=\"Propose your own policies.\" />\n            \n            <PolicyInputPanel />\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n\nexport default function StakePage() {\n    const [policies, setPolicies] = useState(0);\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            let policy, summary;\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n            const policies = await policyFactoryContract.getDeloyedPolicies();\n            console.log(policies)\n            const allPolicies = await Promise.all(\n                policies\n                    .map((address, index) => {\n                        policy = new Contract(address, abis.policy, provider);\n                        return policy.getSummary();\n                    }));\n\n            setPolicies(allPolicies);\n        }\n        getPolicies();\n    }, []);\n\n    function renderList(policies) {\n        if (policies == 0) {\n            return <div>Loading...</div>\n        }\n        return Object.values(policies).map((element, idx) => {\n            console.log(element)\n            return (\n                <Grid key={idx} item xs={4}>\n                    <Card variant=\"outlined\">\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    {element[0]}\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    <Link href={`https://ipfs.io/ipfs/${element[2]}`} rel=\"noopener\" target=\"_blank\" style={{ textDecoration: 'none' }}>\n                        {element[2]}\n                    </Link>\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    Insurance base: <span style={{float: 'right'}}>{element[1].toString() / 10**18} Ether</span>\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    Stacked: <span style={{float: 'right'}}>{element[3].toString() / 10**18} SYC</span>\n                  </Typography>\n\n                </CardContent>\n                <CardActions>\n                    <Button component={ RouterLink } to={`/staking/${idx}`} variant=\"contained\" color=\"primary\">\n                        Stack\n                    </Button>\n                    <Button component={ RouterLink } to={`/claims/${idx}`} variant=\"contained\" color=\"secondary\">\n                        Request\n                    </Button>\n                    <Button component={ RouterLink } to={`/stakeholders/${idx}`} variant=\"contained\" color=\"secondary\">\n                        Stakeholders\n                    </Button>\n                </CardActions>\n              </Card>\n                </Grid>\n            \n            );\n        })\n\n    }\n\n\n    return (\n        <div>\n            <Jumbotron\n                title=\"Stake\"\n                description=\"Earn rewards by staking SYC on policies you want to engage.\" />\n            <Container style={{ marginTop: \"20px\" }}>\n                <Grid container style={{ marginTop: \"20px\" }} spacing={5}>\n                    {renderList(policies)}\n                </Grid>\n            </Container>\n\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { ethers } from \"ethers\";\nimport styled from 'styled-components';\nimport { ChainId, Token, WETH, Fetcher, Route } from '@uniswap/sdk'\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport { Button, CircularProgress} from '@material-ui/core';\nimport axios from 'axios';\n\n\n\n// const projectId = \"66fbccb2856b40b3a622d925568379e9\";\n// const projectSecret = \"275ed56f36e440e0ab7cad94a3310aae\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: \"20px\",\n  },\n  root: {\n  },\n  CardContent: {\n    backgroundColor: '#FFFFFF',\n    paddingTop: '2rem',\n    padding: '0px 2rem 2rem'\n  },\n  GridContainer: {\n    padding: '0px 30px 30px 0px'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  FormContent: {\n    padding: '0.5rem 1rem',\n    marginBottom: '1rem',\n    borderRadius: '1rem',\n    width: '100%',\n    border: '1px solid rgb(228, 232, 239)',\n    color: 'rgb(80, 80, 80)',\n    boxShadow: 'rgb(0 0 0 / 4%) 0px 1px 6px inset',\n  },\n  disabledFormContent: {\n    padding: '0.5rem 1rem',\n    marginBottom: '1rem',\n    borderRadius: '1rem',\n    width: '100%',\n    border: '1px solid rgb(228, 232, 239)',\n    color: 'rgb(80, 80, 80)',\n    boxShadow: 'rgb(0 0 0 / 4%) 0px 1px 6px inset',\n    background: 'rgb(228, 232, 239)'\n  },\n  symbol: {\n    fontSize: '1.5rem'\n  },\n  max: {\n    display: 'inline',\n    opacity: '1',\n    lineHeight: '1rem',\n    color: 'rgb(96, 211, 162)',\n    cursor: 'pointer'\n  },\n  currencyInput: {\n    padding: '1rem 1rem 1rem 0px',\n    textAlign: 'right',\n    border: 'none',\n    fontSize: '1.5rem',\n    fontWeight: '400',\n    width: '100%',\n    boxSizing: 'border-box',\n    appearance: 'none',\n    outline: 'none',\n    \"&:focus\": {\n      outline: 'none !important',\n    }\n  },\n  swapButton: {\n    color: '#24947A',\n    borderColor: '#24947A',\n    borderRadius: '50px',\n    float: 'right',\n    width: '100px',\n    loading: ''\n  }\n}));\n\n\n\nexport default function LiquidityInputPanel(props) {\n  const classes = useStyles()\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const [ETHAmount, setETHAmount] = useState('');\n  const [SYCAmount, setSYCAmount] = useState('');\n  const [ETHPrice, setETHPrice] = useState(0);\n  const [SYCPrice, setSYCPrice] = useState(0);\n  const [ratio, setRatio] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [totoken, setTotoken] = useState(true);\n  const [approveAlready, setApproveAlready] = useState(false);\n  const [networkId, setNetworkId] = useState(0);\n  const [refCode, setRefCode] = useState('');\n  useEffect(() => {\n      async function getNetworkId() {\n          const provider = new ethers.providers.Web3Provider(window.ethereum)\n          const networkId = await provider.getNetwork()\n          setNetworkId(networkId.chainId)\n      \n      }\n      async function getApproveState() {\n        const SycContract = new Contract(addresses[RINKEBY_ID].tokens.SYC, abis.erc20.abi, provider);\n        const account = await provider.listAccounts()\n        if (props.policyAddress) {\n          const approveState = await SycContract.allowance(account[0], props.policyAddress)\n          approveState.gte('5742700000000000000000000') ? setApproveAlready(true):setApproveAlready(false)\n        }\n       \n      }\n      getNetworkId();\n      getApproveState();\n  }, [props])\n\n\n  useEffect(() => {\n    const getETHPrice = async () => {\n      const priceInfo = await axios.get('https://api.binance.com/api/v3/ticker/price?symbol=ETHUSDT')\n      setETHPrice(priceInfo.data.price)\n    }\n    const getSYCPrice = async () => {\n      const SycWethExchangeContract = new Contract(addresses[RINKEBY_ID].pairs[\"SYC-WETH\"], abis.pair, provider);\n      const reserves = await SycWethExchangeContract.getReserves();\n      // reserves[0] is SYC, reserves[1] is ETHER\n      const k = reserves[0].mul(reserves[1])\n      const y = ethers.utils.parseUnits('0.997', \"ether\").add(reserves[0])\n      const x = ethers.utils.formatEther(reserves[1].sub(k.div(y)));\n      setSYCPrice(x.toString())\n    }\n    const getRatio = async () => {\n      const SycWethExchangeContract = new Contract(addresses[RINKEBY_ID].pairs[\"SYC-WETH\"], abis.pair, provider);\n      const reserves = await SycWethExchangeContract.getReserves();\n      // reserves[0] is SYC, reserves[1] is ETHER\n      // BigNumber supports only interger so we need to multiply 1000\n      const ratio = reserves[0].mul(\"10000000\").div(reserves[1]);\n      const ratioFloat = parseFloat(ratio.toString()) / 10000000;\n      setRatio(ratioFloat.toString());\n    }\n    // ratio firstttt\n    getRatio();\n    getETHPrice();\n    getSYCPrice();\n  }, [totoken])\n\n  useEffect(() => {\n    setETHAmount(props.ether/10**18);\n    if (ratio) {\n      setSYCAmount(props.ether/10**18 / ratio);\n    }\n  }, [props])\n\n  async function onProvide() {\n    try {\n      let tx;\n      setLoading(true);\n      console.log(ETHAmount, SYCAmount)\n      console.log(props.policyAddress)\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const signer = provider.getSigner()\n      const account = await signer.getAddress()\n      const policyContract = new Contract(props.policyAddress, abis.policy, signer)\n      const converted = ethers.utils.parseEther(SYCAmount.toString())\n      let params = {\n        value: ethers.utils.parseEther(ETHAmount.toString())\n      }\n      console.log(converted)\n      tx =  await policyContract.stakePolicy(converted, refCode, params);\n\n      // until transactionHash is mined.\n      await provider.waitForTransaction(tx.hash);\n      setLoading(false);\n      console.log(tx);\n    } catch (err) {\n      console.log(err)\n    }\n    setLoading(false);\n  }\n\n  async function onApprove() {\n    try {\n      setLoading(true);\n      const signer = provider.getSigner()\n      const erc20Contract = new Contract(addresses[RINKEBY_ID].tokens.SYC, abis.erc20.abi, signer);\n      let tx = await erc20Contract.approve(\n        props.policyAddress,\n        '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n      );\n      await provider.waitForTransaction(tx.hash);\n      setLoading(false);\n      setApproveAlready(true);\n    } catch (err) {\n      console.log(err)\n    }\n    setLoading(false);\n  }\n\n\n    return (\n      <div>\n        <Container className={classes.container} maxWidth='lg'>\n          <Card className={classes.root}>\n            <CardContent className={classes.CardContent}>\n              <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"referral\"\n                    label=\"Referral Code\"\n                    name=\"referral\"\n                    value={refCode}\n                    onChange={ e => setRefCode(e.target.value)}\n                  />\n              <Grid container className={classes.GridContainer} spacing={10}>\n                <Grid item xs={12} sm={5}>\n                \n                  <Card className={classes.disabledFormContent}>\n                    <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\n                      <Typography className={classes.title} color=\"textPrimary\">\n                        Input\n                      </Typography>\n                    \n                    </div>\n                    <div style={{ display: \"flex\" }}>\n                    <input \n                    className={classes.currencyInput}\n                    placeholder=\"0.0\"\n                    value={ETHAmount}\n                    disabled\n                    style={{cursor: 'not-allowed', background: 'rgb(228, 232, 239)'}}\n                    />\n                    <Button align='right' className={classes.symbol} display='inlign'>\n                      ETH\n                    </Button>\n                    </div>\n                    \n                    <Typography className={classes.pos} color=\"textSecondary\" align='right'>\n                      {(1 / ratio).toFixed(4)} SYC per ETH\n                    </Typography>\n                  </Card>\n                </Grid>\n                <Grid item xs={12} sm={2}>\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n                    <i \n                    className=\"fa fa-plus fa-2x\" \n                    />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={5}>\n                <Card className={classes.disabledFormContent}>\n                    <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\n                      <Typography className={classes.title} color=\"textPrimary\">\n                      Input\n                      </Typography>\n                    </div>\n                    <div style={{ display: \"flex\" }}>\n                    <input \n                    className={classes.currencyInput}\n                    placeholder=\"0.0\"\n                    value={SYCAmount}\n                    disabled\n                    style={{cursor: 'not-allowed', background: 'rgb(228, 232, 239)'}}\n                    />\n                    <Button align='right' className={classes.symbol} display='inlign'>\n                      SYC\n                    </Button>\n                    </div>\n                    <Typography className={classes.pos} color=\"textSecondary\" align='right'>\n                     {ratio} ETH per SYC\n                    </Typography>\n                  </Card>\n                </Grid>\n              </Grid>\n              <div style={{ 'marginRight': '0' }}>\n                <Button \n                  variant=\"outlined\" \n                  className={classes.swapButton}\n                  onClick={e => onProvide()}\n                  disabled={!approveAlready}\n                  >\n                  {loading && <CircularProgress size={14} />}\n                  {!loading && 'Provide'}    \n                </Button>\n                <Button style={{ marginRight: '10px' }}\n                  variant=\"outlined\" \n                  className={classes.swapButton}\n                  onClick={e => onApprove()}\n                  disabled={approveAlready}\n                  >\n                  {loading && <CircularProgress size={14} />}\n                  {!loading && 'Approve'}    \n                </Button>\n              </div> \n            </CardContent>\n          </Card>\n        </Container>\n        \n      </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\nimport { ChainId, Token, WETH, Fetcher, Route } from '@uniswap/sdk'\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport axios from 'axios';\nimport StakeInputPanel from '../StakeInputPanel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n      marginTop: \"20px\",\n    },\n    root: {\n    },\n    CardContent: {\n      backgroundColor: '#FFFFFF',\n      paddingTop: '2rem',\n      padding: '0px 2rem 2rem'\n    },\n    GridContainer: {\n      padding: '0px 30px 30px 0px'\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n      fontWeight: '600'\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    FormContent: {\n      padding: '0.5rem 1rem',\n      marginBottom: '1rem',\n      borderRadius: '1rem',\n      width: '100%',\n      border: '1px solid rgb(228, 232, 239)',\n      color: 'rgb(80, 80, 80)',\n      boxShadow: 'rgb(0 0 0 / 4%) 0px 1px 6px inset',\n    },\n    disabledFormContent: {\n      padding: '0.5rem 1rem',\n      marginBottom: '1rem',\n      borderRadius: '1rem',\n      width: '100%',\n      border: '1px solid rgb(228, 232, 239)',\n      color: 'rgb(80, 80, 80)',\n      boxShadow: 'rgb(0 0 0 / 4%) 0px 1px 6px inset',\n      background: 'rgb(228, 232, 239)'\n    },\n    symbol: {\n      fontSize: '1.5rem'\n    },\n    max: {\n      display: 'inline',\n      opacity: '1',\n      lineHeight: '1rem',\n      color: 'rgb(96, 211, 162)',\n      cursor: 'pointer'\n    },\n    currencyInput: {\n      padding: '1rem 1rem 1rem 0px',\n      textAlign: 'right',\n      border: 'none',\n      fontSize: '1.5rem',\n      fontWeight: '400',\n      width: '100%',\n      boxSizing: 'border-box',\n      appearance: 'none',\n      outline: 'none',\n      \"&:focus\": {\n        outline: 'none !important',\n      }\n    },\n    swapButton: {\n      color: '#24947A',\n      borderColor: '#24947A',\n      borderRadius: '50px',\n      float: 'right',\n      width: '100px',\n      fontSize: '14px',\n      loading: ''\n    }\n  }));\n  \n\nexport default function StakeItem(props) {\n    const classes = useStyles()\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const [policyAddress, setPolicyAddress] = useState('');\n    const [minPremium, setminPremium] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [SYCPrice, setSYCPrice] = useState(0);\n    const [ETHPrice, setETHPrice] = useState(0);\n\n    useEffect(() => {\n        const getETHPrice = async () => {\n            const priceInfo = await axios.get('https://api.binance.com/api/v3/ticker/price?symbol=ETHUSDT')\n            setETHPrice(priceInfo.data.price)\n        }\n        const getSYCPrice = async () => {\n          const SycWethExchangeContract = new Contract(addresses[RINKEBY_ID].pairs[\"SYC-WETH\"], abis.pair, provider);\n          const reserves = await SycWethExchangeContract.getReserves();\n          // reserves[0] is SYC, reserves[1] is ETHER\n          const k = reserves[0].mul(reserves[1])\n          const y = ethers.utils.parseUnits('0.997', \"ether\").add(reserves[0])\n          const x = ethers.utils.formatEther(reserves[1].sub(k.div(y)));\n          setSYCPrice(x.toString())\n        }\n        getETHPrice();\n        getSYCPrice();\n      }, [])\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            const account = await signer.getAddress()\n\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider)\n            const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id)\n            const policy = new Contract(policiesAddress, abis.policy, provider)\n            const policyInfo = await policy.getSummary()\n\n            // bigNumber to String\n            setPolicyAddress(policiesAddress)\n            setminPremium(policyInfo[1].toString())\n\n        }\n\n        getPolicies();\n    }, []);\n\n    return (\n        <div>\n            <Jumbotron\n                title=\"Deposit\"\n                description=\"Deposite ETH & SYC on your selected project.\" />\n            <StakeInputPanel ether={minPremium} policyAddress={policyAddress}/>\n      </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport CircularProgressWithLabel from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { StepContent } from \"@material-ui/core\";\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 650,\n    },\n    approve: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n      },\n}));\n\nexport default function ClaimsPage(props) {\n    const classes = useStyles();\n    const [policyAddress, setPolicyAddress] = useState(0);\n    const [requests, setRequests] = useState([]);\n    const [stakeHoldersCount, setStakeHoldersCount] = useState(0);\n    const [delegatorCount, setDelegatorCount] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [requestCount, setRequestCount] = useState(0);\n    const [isDelegator, setIsDelegator] = useState(false);\n    const [content, setContent] = useState('');\n    const [multiple, setMultiple] = useState('');\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            const account = await signer.getAddress()\n\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider)\n            const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id)\n            const policy = new Contract(policiesAddress, abis.policy, provider)\n            const policyStakeHolders = await policy.getPolicyStakeholders();\n            const requestCount = await policy.getRequestsCount();\n            const registryContract = new Contract(addresses[RINKEBY_ID].registry, abis.registry, provider)\n            const delegatorCount = await registryContract.getDelegatorCount()\n            const isDelegator = await registryContract.validDelegators(account)\n\n            setIsDelegator(isDelegator)\n            setRequestCount(requestCount);\n            setStakeHoldersCount(policyStakeHolders.length)\n            setDelegatorCount(parseInt(delegatorCount.toString()));\n            setPolicyAddress(policiesAddress)\n\n            const requests = await Promise.all(\n                Array(parseInt(requestCount))\n                    .fill()\n                    .map((element, index) => {\n                        return policy.requests(index);\n                    }).reverse()\n            );\n            setRequests(requests)\n        }\n\n\n        getPolicies();\n    }, []);\n\n\n    function refreshPage() {\n        window.location.reload(false);\n      }\n\n    async function delApprove(idx) {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyContract = new Contract(policyAddress, abis.policy, signer);\n            tx = await policyContract.delApproveRequest(\n                idx\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n            refreshPage();\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n    async function Approve(idx) {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyContract = new Contract(policyAddress, abis.policy, signer);\n            tx = await policyContract.approveRequest(\n                idx\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n            refreshPage();\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n    async function Request() {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyContract = new Contract(policyAddress, abis.policy, signer);\n            tx = await policyContract.createRequest(\n                content, multiple\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n            refreshPage();\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n    async function approveToken() {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const erc721Contract = new Contract(addresses[RINKEBY_ID].tokens.ATP, abis.erc721, signer);\n            tx = await erc721Contract.setApprovalForAll(\n                policyAddress,\n                true\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n            refreshPage();\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n\n    async function Claim(idx) {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyContract = new Contract(policyAddress, abis.policy, signer);\n            tx = await policyContract.claimRequest(\n                idx\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n            refreshPage();\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n\n    return (\n        <div>\n            <Backdrop className={classes.backdrop} open={loading} >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            <Jumbotron\n                title=\"Claims\"\n                description=\"Earn rewards by approving claims.\" />\n            <Container className={classes.container} maxWidth='xs' component={Paper} style={{ padding: '0px 30px 30px 30px' }}>\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"content\"\n                            label=\"IPFS Content\"\n                            name=\"content\"\n                            onChange={e => setContent(e.target.value)}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"multiple\"\n                            label=\"Multiple\"\n                            id=\"multiple\"\n                            onChange={e => setMultiple(e.target.value)}\n                        />\n                        <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                                onClick={e => approveToken()}\n                            >\n                                Approve tokens\n                            </Button>\n\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                                onClick={e => Request()}\n                            >\n                                Request\n                            </Button>\n                        </ButtonGroup>\n                    </form>\n                </div>\n\n            </Container>\n\n            <Container className={classes.container} maxWidth='lg' style={{ marginTop: '30px' }}>\n\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>ID</TableCell>\n                                <TableCell align=\"right\">IPFS Content</TableCell>\n                                <TableCell align=\"right\">Multiple</TableCell>\n                                <TableCell align=\"right\">Requester</TableCell>\n                                <TableCell align=\"right\">Approve Rate</TableCell>\n                                <TableCell align=\"right\">Dele. Approve Rate</TableCell>\n                                <TableCell align=\"right\">Action</TableCell>\n                                <TableCell align=\"right\">Delegator</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {requests.map((request, idx) => (\n                                <TableRow key={idx} style={ request.complete ? {backgroundColor: '#E0E0E0'} : {}} >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {requestCount - idx}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography color=\"textSecondary\">\n                                            <Link href={`https://ipfs.io/ipfs/${request.description_URI}/`} rel=\"noopener\" target=\"_blank\" style={{ textDecoration: 'none' }}>\n                                                {request.description_URI}\n                                            </Link>\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"right\">{request.multiple.toString()}</TableCell>\n                                    <TableCell align=\"right\">{request.requester.slice(0, 6)}...{request.requester.slice(-4)}</TableCell>\n                                    <TableCell align=\"right\">\n                                        <Box position=\"relative\" display=\"inline-flex\">\n                                            <CircularProgressWithLabel\n                                                variant=\"determinate\"\n                                                value={parseInt(request.approvalCount.toString()) / (stakeHoldersCount) * 100} />\n                                            <Box\n                                                top={0}\n                                                left={0}\n                                                bottom={0}\n                                                right={0}\n                                                position=\"absolute\"\n                                                display=\"flex\"\n                                                alignItems=\"center\"\n                                                justifyContent=\"center\"\n                                            >\n                                                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                                                    parseInt(request.approvalCount.toString()) / (stakeHoldersCount) * 100\n                                                )}%`}</Typography>\n                                            </Box>\n                                        </Box>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Box position=\"relative\" display=\"inline-flex\">\n                                            <CircularProgressWithLabel\n                                                variant=\"determinate\"\n                                                value={parseInt(request.delApprovalCount.toString()) / (delegatorCount) * 100} />\n                                            <Box\n                                                top={0}\n                                                left={0}\n                                                bottom={0}\n                                                right={0}\n                                                position=\"absolute\"\n                                                display=\"flex\"\n                                                alignItems=\"center\"\n                                                justifyContent=\"center\"\n                                            >\n                                                <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n                                                    parseInt(request.delApprovalCount.toString()) / (delegatorCount) * 100\n                                                )}%`}</Typography>\n                                            </Box>\n                                        </Box>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <div className={classes.wrapper}>\n                                            {parseInt(request.approvalCount.toString()) / (stakeHoldersCount) * 100 > 66 && parseInt(request.delApprovalCount.toString() / (delegatorCount)) * 100 > 66 ?\n                                                <Button\n                                                    size=\"small\"\n                                                    color=\"secondary\"\n                                                    disabled={loading}\n                                                    className={classes.approve}\n                                                    onClick={e => Claim(requestCount - idx - 1)}\n                                                >\n                                                    Claim\n                                        </Button>\n                                                : <Button\n                                                    size=\"small\"\n                                                    color=\"primary\"\n                                                    disabled={loading}\n                                                    className={classes.approve}\n                                                    onClick={e => Approve(requestCount - idx - 1)}\n                                                >\n                                                    Approve\n                                        </Button>}\n                                        </div>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <div className={classes.wrapper}>\n                                            <Button\n                                                size=\"small\"\n                                                color=\"primary\"\n                                                disabled={loading || !isDelegator}\n                                                className={classes.approve}\n                                                onClick={e => delApprove(requestCount - idx - 1)}\n                                            >\n                                                Approve\n                                        </Button>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n\n        </div>\n    );\n}","import { useCallback, useEffect, useState } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"66fbccb2856b40b3a622d925568379e9\";\n\nconst NETWORK_NAME = \"rinkeby\";\n\nfunction useWeb3Modal(config = {}) {\n  const [provider, setProvider] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const { autoLoad = true, infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n  const web3Modal = new Web3Modal({\n    network: NETWORK,\n    cacheProvider: true,\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId,\n        },\n      },\n    },\n  });\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n\n  const logoutOfWeb3Modal = useCallback(\n    async function () {\n      await web3Modal.clearCachedProvider();\n      window.location.reload();\n    },\n    [web3Modal],\n  );\n\n  // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && web3Modal.cachedProvider) {\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal.cachedProvider]);\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n","import React, { useState, useEffect } from 'react';\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ethers } from \"ethers\";\n// import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\nimport FacebookLogin from 'react-facebook-login';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/1600x900/?ethereum)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const [account, setAccount] = useState('Please connect to Metamask');\n  const [login, setLogin] = useState(false);\n  const [data, setData] = useState({id:'',name: ''});\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [refcode, setRefcode] = useState('');\n  \n  const responseFacebook = (response) => {\n    setData(response);\n    if (response.accessToken) {\n      setLogin(true);\n    } else {\n      setLogin(false);\n    }\n  }\n  \n  useEffect(() => {\n    async function getAccount() {\n        const signer = provider.getSigner()\n        const account = await signer.getAddress()\n        const balance = await provider.getBalance(account)\n        setAccount(account)\n      }\n      getAccount();\n    }, [])\n    \n\n    async function Refcode() {\n        let refcode;\n        setLoading(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n        const registryContract = new Contract(addresses[RINKEBY_ID].registry, abis.registry, signer);\n        refcode = await registryContract.getRefCode()\n        setRefcode(refcode)\n        setOpen(true)\n        return refcode\n    }\n\n    async function Register() {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const registryContract = new Contract(addresses[RINKEBY_ID].registry, abis.registry, signer);\n            tx = await registryContract.register(\n                data.id,\n                data.name\n            );\n          // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n            } catch (err) {\n            console.log(err)\n            }\n            setLoading(false);\n        }\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n      \n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      \n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      \n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Register\n          </Typography>\n          <form className={classes.form} noValidate >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"address\"\n              label=\"Ethereum Address\"\n              name=\"address\"\n              value={account}\n              disabled\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"Facebook Id\"\n              label=\"Facebook Id\"\n              id=\"uid\"\n              value={data.id}\n              disabled\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"Facebook Name\"\n              label=\"Facebook Name\"\n              id=\"name\"\n              value={data.name}\n              disabled\n            />\n              <Grid container>\n                <FacebookLogin\n                appId=\"360104115420180\"\n                autoLoad={false}\n                fields=\"name,email\"\n                scope=\"public_profile\"\n                callback={responseFacebook}\n                cssClass=\"my-facebook-button-class\"\n                textButton=\"Connect to Facebook 🥺\"\n                size=\"small\"\n                />\n                </Grid>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={Register}\n            >\n              Register\n            </Button>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={Refcode}\n              style={{marginTop:'10px'}}\n            >\n              referral code\n            </Button>\n          </form>\n          {refcode}\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport CircularProgressWithLabel from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 650,\n    },\n    approve: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n      },\n      buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n      },\n    \n}));\n\nexport default function StakeholdersPage(props) {\n    const classes = useStyles();\n    const [policyAddress, setPolicyAddress] = useState(0);\n    const [requests, setRequests] = useState([]);\n    const [stakeHolders, setStakeHolders] = useState([]);\n    const [stakeHoldersAddress, setStakeHoldersAddress] = useState([]);\n    const [delegatorCount, setDelegatorCount] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [requestCount, setRequestCount] = useState(0);\n    const [isDelegator, setIsDelegator] = useState(false);\n    const [endorsers, setEndorsers] = useState([]);\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            const account = await signer.getAddress()\n\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider)\n            const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id)\n            const policy = new Contract(policiesAddress, abis.policy, provider)\n            const policyStakeHolders = await policy.getPolicyStakeholders();\n            const requestCount = await policy.getRequestsCount();\n            const registryContract = new Contract(addresses[RINKEBY_ID].registry, abis.registry, provider)\n            const delegatorCount = await registryContract.getDelegatorCount()\n            const isDelegator = await registryContract.validDelegators(account)\n\n            setStakeHoldersAddress(policyStakeHolders)\n            setIsDelegator(isDelegator)\n            setRequestCount(requestCount);\n            setDelegatorCount(parseInt(delegatorCount.toString()));\n            setPolicyAddress(policiesAddress)\n            const stakeholders = await Promise.all(\n                policyStakeHolders.map((address, index) => {\n                        return registryContract.mapInsurers(address)\n                    })\n            );\n            const endorsers = await Promise.all(\n                policyStakeHolders.map((endorser, index) => {\n                        return policy.endorser(endorser)\n                    })\n            );\n            setEndorsers(endorsers)\n            setStakeHolders(stakeholders)\n        }\n\n\n        getPolicies();\n    }, []);\n\n\n\n    async function delApprove(idx) {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyContract = new Contract(policyAddress, abis.policy, signer);\n            tx = await policyContract.delApproveRequest(\n                idx\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n    async function Approve(idx) {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyContract = new Contract(policyAddress, abis.policy, signer);\n            tx = await policyContract.approveRequest(\n                idx\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n    async function Claim(idx) {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyContract = new Contract(policyAddress, abis.policy, signer);\n            tx = await policyContract.claimRequest(\n                idx\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n\n    return (\n        <div>\n            <Jumbotron\n                title=\"Stakeholders\"\n                description=\"Stakeholders List.\" />\n            <Container className={classes.container} maxWidth='lg'>\n\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>ID</TableCell>\n                                <TableCell align=\"right\">Address</TableCell>\n                                <TableCell align=\"right\">Name</TableCell>\n                                <TableCell align=\"right\">Endorser</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {stakeHolders.map((stakeHolder, idx) => (\n                                <TableRow key={idx}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {idx+1}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography color=\"textSecondary\">\n                                            {stakeHoldersAddress[idx]}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography color=\"primary\">\n                                            {stakeHolder.userName}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography color=\"textSecondary\">\n                                            {endorsers[idx].slice(0, 6)+'...'+endorsers[idx].slice(-4)}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n        </div>\n    );\n}","import React from \"react\";\nimport { Router, Route, Switch } from 'react-router-dom';\n// import { Router, Route, Link, hashHistory } from 'react-router'\nimport history from './history';\nimport Header from './components/Header';\nimport SwapPage from './components/Pages/SwapPage';\nimport PoolPage from './components/Pages/PoolPage';\nimport PolicyPage from './components/Pages/PolicyPage';\nimport StakePage from './components/Pages/StakePage';\nimport StakeItem from './components/Pages/StakeItem';\nimport ClaimsPage from './components/Pages/ClaimsPage';\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport RegisterPage from './components/Pages/RegisterPage';\nimport StakeholdersPage from './components/Pages/StakeholdersPage';\n\nfunction App() {\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal();\n\n  return (\n    <div>\n      <Header provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal}/>\n      <Router history={history}>\n          <Switch>\n            <Route path=\"/\" exact component={SwapPage} />\n            <Route path=\"/pool\" exact component={PoolPage} />\n            <Route path=\"/policy/new\" exact component={PolicyPage} />\n            <Route path=\"/staking\" exact component={StakePage} />\n            <Route path=\"/staking/:id\" exact component={StakeItem} />\n            <Route path=\"/register\" exact component={RegisterPage} />\n            <Route path=\"/claims/:id\" exact component={ClaimsPage} />\n            <Route path=\"/stakeholders/:id\" exact component={StakeholdersPage} />\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\n// This is the official Uniswap v2 subgraph. You can replace it with your own, if you need to.\n// See all subgraphs: https://thegraph.com/explorer/\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\",\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","import erc20 from \"./abis/erc20.json\";\nimport erc721 from \"./abis/erc721.json\";\nimport factory from \"./abis/factory.json\";\nimport pair from \"./abis/pair.json\";\nimport router01 from \"./abis/router01.json\";\nimport router02 from \"./abis/router02.json\";\nimport implemetation from \"./abis/implemetation.json\";\nimport policyFactory from \"./abis/policyFactory.json\";\nimport policy from \"./abis/policy.json\";\nimport registry from \"./abis/registry.json\";\n\n\nexport default {\n  erc20,\n  erc721,\n  factory,\n  pair,\n  router01,\n  router02,\n  implemetation,\n  policyFactory,\n  policy,\n  registry\n};\n","/**\n * See all ids below\n * https://ethereum.stackexchange.com/questions/17051/how-to-select-a-network-id-or-is-there-a-list-of-network-ids\n */\nexport const GOERLI_ID = 5;\nexport const KOVAN_ID = 42;\nexport const MAINNET_ID = 1;\nexport const RINKEBY_ID = 4;\nexport const ROPSTEN_ID = 3;\nexport const IEBI_ID = 57427;\n\nconst commonContracts = {\n  factory: \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\",\n  router01: \"0xf164fC0Ec4E93095b804a4795bBe1e041497b92a\",\n  router02: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\",\n  implementation: \"0x4a1b8751AEdAac54e74abDC6Dd736CFc5f7c5a81\",\n  policyFactory: \"0x3Ee8500C6381fE9dEf481504bf8bFF8C82167AA6\",\n  registry: \"0xF5b79544Affa9461aa00954707887E423BCd0E85\"\n};\n\nexport default {\n  [GOERLI_ID]: {\n    pairs: {\n      \"DAI-WETH\": \"0x8F609d85ebC64316B0B2f9E53c11b4e48B7A06d2\",\n    },\n    tokens: {\n      DAI: \"0x697Ed3E98aaeCFa3121F536251F9D500de159dBa\",\n      WETH: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\",\n    },\n    ...commonContracts,\n  },\n  [KOVAN_ID]: {\n    pairs: {\n      \"DAI-WETH\": \"0xB10cf58E08b94480fCb81d341A63295eBb2062C2\",\n    },\n    tokens: {\n      DAI: \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\",\n      WETH: \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\",\n    },\n    ...commonContracts,\n  },\n  [MAINNET_ID]: {\n    pairs: {\n      \"BAT-WETH\": \"0xB6909B960DbbE7392D405429eB2b3649752b4838\",\n      \"COMP-WETH\": \"0xCFfDdeD873554F362Ac02f8Fb1f02E5ada10516f\",\n      \"DAI-WETH\": \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\",\n      \"LEND-WETH\": \"0xaB3F9bF1D81ddb224a2014e98B238638824bCf20\",\n      \"LINK-WETH\": \"0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974\",\n      \"MKR-WETH\": \"0xC2aDdA861F89bBB333c90c492cB837741916A225\",\n      \"USDC-WETH\": \"0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc\",\n      \"USDC-USDT\": \"0x3041CbD36888bECc7bbCBc0045E3B1f144466f5f\",\n      \"WBTC-WETH\": \"0xBb2b8038a1640196FbE3e38816F3e67Cba72D940\",\n      \"WETH-AMPL\": \"0xc5be99A02C6857f9Eac67BbCE58DF5572498F40c\",\n    },\n    tokens: {\n      AMPL: \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\",\n      BAT: \"0x0D8775F648430679A709E98d2b0Cb6250d2887EF\",\n      COMP: \"0xc00e94Cb662C3520282E6f5717214004A7f26888\",\n      DAI: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n      LEND: \"0x80fB784B7eD66730e8b1DBd9820aFD29931aab03\",\n      LINK: \"0x514910771AF9Ca656af840dff83E8264EcF986CA\",\n      MKR: \"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\",\n      USDC: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n      USDT: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n      wBTC: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\",\n      WETH: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n    },\n    ...commonContracts,\n  },\n  [RINKEBY_ID]: {\n    pairs: {\n      \"DAI-WETH\": \"0x8B22F85d0c844Cf793690F6D9DFE9F11Ddb35449\",\n      \"SYC-WETH\": \"0x88F9F0C803c1D4e9f745dEAb6fC701933c14F7B7\"\n    },\n    tokens: {\n      DAI: \"0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735\",\n      WETH: \"0xc778417E063141139Fce010982780140Aa0cD5Ab\",\n      SYC: \"0xcb77eE0ED56e8012Da231fd4b5f92530a6AE23F7\",\n      ATP: \"0x29146Bc9aE57052d22244B3b2380aB4c8FE8500f\"\n    },\n    ...commonContracts,\n  },\n  [ROPSTEN_ID]: {\n    pairs: {\n      \"DAI-WETH\": \"0x1c5DEe94a34D795f9EEeF830B68B80e44868d316\",\n    },\n    tokens: {\n      DAI: \"0xaD6D458402F60fD3Bd25163575031ACDce07538D\",\n      WETH: \"0xc778417E063141139Fce010982780140Aa0cD5Ab\",\n    },\n    ...commonContracts,\n  },\n};\n","import React, { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport styled from 'styled-components';\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport ipfs from '../../ipfs';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport FacebookLogin from 'react-facebook-login';\nimport PolicyIcon from '@material-ui/icons/Policy';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n      marginTop: \"20px\",\n      width: '800px',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      backgroundColor: 'white',\n      padding: '30px 30px 30px 30px',\n      borderRadius: '10px'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n}));\n\n\nexport default function PolicyInputPanel() {\n    const classes = useStyles()\n\n    const [loading, setLoading] = useState(false);\n    const [policyName, setPolicyName] = useState(0);\n    const [policyType, setPolicyType] = useState(0);\n    const [policyContent, setPolicyContent] = useState('');\n    const [policyPremium, setPolicyPremium] = useState(0);\n    const [policyStart, setPolicyStart] = useState(new Date());\n    const [policyEnd, setPolicyEnd] = useState(new Date());\n    const [policyDeadline, setPolicyDeadline] = useState(new Date());\n\n    const [buffer, setBuffer] = useState('');\n    const [contentHash, setContentHash] = useState('');\n    const [login, setLogin] = useState(false);\n    const [data, setData] = useState({});\n  \n    const responseFacebook = (response) => {\n      console.log(response);\n      setData(response);\n      if (response.accessToken) {\n        setLogin(true);\n      } else {\n        setLogin(false);\n      }\n    }\n\n\n    function dateToUnix(value) {\n        const date = new Date(value);\n        return parseInt(date.getTime() / 10**3);\n    }\n\n    const captureFile = async event => {\n      setLoading(true);\n      console.log('capture file...');\n      event.preventDefault();\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = () => {\n        setBuffer(Buffer.from(reader.result));\n      }\n      // upload\n      let data = buffer;\n      console.log('Submit this: ', data);\n      const postResponse = await ipfs.add(data);\n      console.log(\"hash: \", postResponse['path']);\n      setPolicyContent(postResponse['path']);\n      setLoading(false);\n    }\n\n\n    async function createPolicy() {\n        try {\n          console.log(ethers.utils.parseEther(policyPremium))\n          console.log(dateToUnix(policyStart), dateToUnix(policyEnd))\n          console.log(dateToUnix(policyDeadline))\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, signer);\n            console.log(policyFactoryContract)\n            tx = await policyFactoryContract.createPolicy(\n                policyName,\n                policyType,\n                ethers.utils.parseEther(policyPremium),\n                dateToUnix(policyStart),\n                dateToUnix(policyEnd),\n                policyContent,\n                dateToUnix(policyDeadline),\n            );\n          // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n            } catch (err) {\n            console.log(err)\n            }\n            setLoading(false);\n        }\n    return (\n      <div>\n        <Backdrop className={classes.backdrop} open={loading} >\n                <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Container component=\"main\" maxWidth=\"md\">\n        <CssBaseline />\n        <div className={classes.paper}>\n        <Grid container justify = \"center\">\n      </Grid>\n        <Grid container>\n          <FacebookLogin\n          appId=\"360104115420180\"\n          autoLoad={false}\n          fields=\"name,email\"\n          scope=\"public_profile\"\n          size=\"small\"\n          callback={responseFacebook}\n          icon=\"fa-facebook\" />\n        </Grid>\n      <form className={classes.form} noValidate>\n      <Grid container spacing={4}>\n      <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"Proposer\"\n            label=\"Proposer\"\n            value={data.name}\n            disabled\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"UserId\"\n            label=\"UserId\"\n            value={data.id}\n            disabled\n            fullWidth\n            InputProps={{\n              startAdornment: (\n              <InputAdornment position=\"start\">\n                <FacebookIcon />\n              </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"policyName\"\n            label=\"Title\"\n            onChange={e => setPolicyName(e.target.value)}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n        <TextField\n          id=\"standard-select-type\"\n          required\n          select\n          label=\"Type\"\n          value={policyType}\n          onChange={e => setPolicyType(e.target.value)}\n          helperText=\"Please select your insurance type\"\n          fullWidth\n        >\n            <MenuItem value=\"Cyper Insurance\">Cyper Insurance</MenuItem>\n            <MenuItem value=\"Health Insurance\">Health Insurance</MenuItem>\n            <MenuItem value=\"Investment Insurance\">Investment Insurance</MenuItem>\n            <MenuItem value=\"Auto Insurance\">Auto Insurance</MenuItem>\n            <MenuItem value=\"Oracle BTC\">Oracle BTC insurance</MenuItem>\n            </TextField>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n        <DateTimePicker\n            value={policyStart}\n            disablePast\n            onChange={e => setPolicyStart(e)}\n            label=\"Start time\"\n            showTodayButton\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n        <DateTimePicker\n            value={policyEnd}\n            disablePast\n            onChange={e => setPolicyEnd(e)}\n            label=\"End time\"\n            showTodayButton\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n        <DateTimePicker\n            value={policyDeadline}\n            disablePast\n            onChange={e => setPolicyDeadline(e)}\n            label=\"Deadline\"\n            showTodayButton\n            fullWidth\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={9}>\n          <TextField\n            required\n            id=\"policyContent\"\n            name=\"policyContent\"\n            label=\"Content Hash\"\n            value={policyContent}\n            disabled\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={3}>\n        <input\n                type=\"file\"\n                accept=\".pdf,.word,.jpg\"\n                className={classes.input}\n                style={{ display: 'none', }}\n                id=\"contained-button-file\"\n                multiple\n                onChange={e => captureFile(e)}\n              />\n            <label htmlFor=\"contained-button-file\">\n            <Button variant=\"contained\" component=\"span\" className={classes.button} startIcon={<CloudUploadIcon />}>\n              Upload Policy\n            </Button>\n            </label> \n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"Policypremium\"\n            name=\"Policypremium\"\n            label=\"Claim Base\"\n            onChange={e => setPolicyPremium(e.target.value)}\n            fullWidth\n          />\n        </Grid>\n        \n        <Grid justify=\"flex-end\" container>\n          <Grid>\n          <Button variant=\"contained\" component=\"span\" onClick={createPolicy} className={classes.button}>\n              Create\n          </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      </form>\n    </div>\n    \n  </Container>\n  </MuiPickersUtilsProvider>\n\n  </div>\n    )\n}","const chalk = require(\"chalk\");\nconst ipfsApi = require(\"ipfs-http-client\");\n\n\nconst infura = { host: \"ipfs.infura.io\", port: \"5001\", protocol: \"https\" };\n// Run your own ipfs daemon: https://docs.ipfs.io/how-to/command-line-quick-start/#install-ipfs\n// const localhost = { host: \"localhost\", port: \"5001\", protocol: \"http\" };\n\nconst ipfs = ipfsApi(infura);\n\nexport default ipfs;"],"sourceRoot":""}