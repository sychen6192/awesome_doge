{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar Multiaddr = require('multiaddr');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(addr) {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (addr && typeof addr === 'object' && !Multiaddr.isMultiaddr(addr)) {\n                options = addr;\n                addr = null;\n              }\n\n              _context.next = 4;\n              return api.post('bootstrap/add', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: addr\n                }, options)),\n                headers: options.headers\n              });\n\n            case 4:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.json());\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/bootstrap/add.js"],"names":["Multiaddr","require","configure","toUrlSearchParams","module","exports","api","addr","options","isMultiaddr","post","timeout","signal","searchParams","arg","headers","res","json"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC;AAAA,wEAAO,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAaC,cAAAA,OAAb,2DAAuB,EAAvB;;AACL,kBAAID,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoC,CAACP,SAAS,CAACS,WAAV,CAAsBF,IAAtB,CAAzC,EAAsE;AACpEC,gBAAAA,OAAO,GAAGD,IAAV;AACAA,gBAAAA,IAAI,GAAG,IAAP;AACD;;AAJI;AAAA,qBAMaD,GAAG,CAACI,IAAJ,CAAS,eAAT,EAA0B;AAC1CC,gBAAAA,OAAO,EAAEH,OAAO,CAACG,OADyB;AAE1CC,gBAAAA,MAAM,EAAEJ,OAAO,CAACI,MAF0B;AAG1CC,gBAAAA,YAAY,EAAEV,iBAAiB;AAC7BW,kBAAAA,GAAG,EAAEP;AADwB,mBAE1BC,OAF0B,EAHW;AAO1CO,gBAAAA,OAAO,EAAEP,OAAO,CAACO;AAPyB,eAA1B,CANb;;AAAA;AAMCC,cAAAA,GAND;AAAA,+CAgBEA,GAAG,CAACC,IAAJ,EAhBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAkBD,CAnByB,CAA1B","sourcesContent":["'use strict'\n\nconst Multiaddr = require('multiaddr')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (addr, options = {}) => {\n    if (addr && typeof addr === 'object' && !Multiaddr.isMultiaddr(addr)) {\n      options = addr\n      addr = null\n    }\n\n    const res = await api.post('bootstrap/add', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}