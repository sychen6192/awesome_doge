{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useEffect,useState}from\"react\";import{Web3Provider}from\"@ethersproject/providers\";import Web3Modal from\"web3modal\";import WalletConnectProvider from\"@walletconnect/web3-provider\";// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nvar INFURA_ID=\"66fbccb2856b40b3a622d925568379e9\";var NETWORK_NAME=\"rinkeby\";function useWeb3Modal(){var config=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _useState=useState(),_useState2=_slicedToArray(_useState,2),provider=_useState2[0],setProvider=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),autoLoaded=_useState4[0],setAutoLoaded=_useState4[1];var _config$autoLoad=config.autoLoad,autoLoad=_config$autoLoad===void 0?true:_config$autoLoad,_config$infuraId=config.infuraId,infuraId=_config$infuraId===void 0?INFURA_ID:_config$infuraId,_config$NETWORK=config.NETWORK,NETWORK=_config$NETWORK===void 0?NETWORK_NAME:_config$NETWORK;// Web3Modal also supports many other wallets.\n// You can see other options at https://github.com/Web3Modal/web3modal\nvar web3Modal=new Web3Modal({network:NETWORK,cacheProvider:true,providerOptions:{walletconnect:{package:WalletConnectProvider,options:{infuraId:infuraId}}}});// Open wallet selection modal.\nvar loadWeb3Modal=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newProvider;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return web3Modal.connect();case 2:newProvider=_context.sent;setProvider(new Web3Provider(newProvider));case 4:case\"end\":return _context.stop();}}},_callee);})),[web3Modal]);var logoutOfWeb3Modal=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return web3Modal.clearCachedProvider();case 2:window.location.reload();case 3:case\"end\":return _context2.stop();}}},_callee2);})),[web3Modal]);// If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\nuseEffect(function(){if(autoLoad&&!autoLoaded&&web3Modal.cachedProvider){loadWeb3Modal();setAutoLoaded(true);}},[autoLoad,autoLoaded,loadWeb3Modal,setAutoLoaded,web3Modal.cachedProvider]);return[provider,loadWeb3Modal,logoutOfWeb3Modal];}export default useWeb3Modal;","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/hooks/useWeb3Modal.js"],"names":["useCallback","useEffect","useState","Web3Provider","Web3Modal","WalletConnectProvider","INFURA_ID","NETWORK_NAME","useWeb3Modal","config","provider","setProvider","autoLoaded","setAutoLoaded","autoLoad","infuraId","NETWORK","web3Modal","network","cacheProvider","providerOptions","walletconnect","package","options","loadWeb3Modal","connect","newProvider","logoutOfWeb3Modal","clearCachedProvider","window","location","reload","cachedProvider"],"mappings":"0aAAA,OAASA,WAAT,CAAsBC,SAAtB,CAAiCC,QAAjC,KAAiD,OAAjD,CACA,OAASC,YAAT,KAA6B,0BAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,8BAAlC,CAEA;AACA;AACA,GAAMC,CAAAA,SAAS,CAAG,kCAAlB,CAEA,GAAMC,CAAAA,YAAY,CAAG,SAArB,CAEA,QAASC,CAAAA,YAAT,EAAmC,IAAbC,CAAAA,MAAa,2DAAJ,EAAI,eACDP,QAAQ,EADP,wCAC1BQ,QAD0B,eAChBC,WADgB,8BAEGT,QAAQ,CAAC,KAAD,CAFX,yCAE1BU,UAF0B,eAEdC,aAFc,oCAGyCJ,MAHzC,CAGzBK,QAHyB,CAGzBA,QAHyB,2BAGd,IAHc,mCAGyCL,MAHzC,CAGRM,QAHQ,CAGRA,QAHQ,2BAGGT,SAHH,kCAGyCG,MAHzC,CAGcO,OAHd,CAGcA,OAHd,0BAGwBT,YAHxB,iBAKjC;AACA;AACA,GAAMU,CAAAA,SAAS,CAAG,GAAIb,CAAAA,SAAJ,CAAc,CAC9Bc,OAAO,CAAEF,OADqB,CAE9BG,aAAa,CAAE,IAFe,CAG9BC,eAAe,CAAE,CACfC,aAAa,CAAE,CACbC,OAAO,CAAEjB,qBADI,CAEbkB,OAAO,CAAE,CACPR,QAAQ,CAARA,QADO,CAFI,CADA,CAHa,CAAd,CAAlB,CAaA;AACA,GAAMS,CAAAA,aAAa,CAAGxB,WAAW,sEAAC,yKACNiB,CAAAA,SAAS,CAACQ,OAAV,EADM,QAC1BC,WAD0B,eAEhCf,WAAW,CAAC,GAAIR,CAAAA,YAAJ,CAAiBuB,WAAjB,CAAD,CAAX,CAFgC,sDAAD,GAG9B,CAACT,SAAD,CAH8B,CAAjC,CAKA,GAAMU,CAAAA,iBAAiB,CAAG3B,WAAW,sEACnC,+JACQiB,CAAAA,SAAS,CAACW,mBAAV,EADR,QAEEC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAFF,wDADmC,GAKnC,CAACd,SAAD,CALmC,CAArC,CAQA;AACAhB,SAAS,CAAC,UAAM,CACd,GAAIa,QAAQ,EAAI,CAACF,UAAb,EAA2BK,SAAS,CAACe,cAAzC,CAAyD,CACvDR,aAAa,GACbX,aAAa,CAAC,IAAD,CAAb,CACD,CACF,CALQ,CAKN,CAACC,QAAD,CAAWF,UAAX,CAAuBY,aAAvB,CAAsCX,aAAtC,CAAqDI,SAAS,CAACe,cAA/D,CALM,CAAT,CAOA,MAAO,CAACtB,QAAD,CAAWc,aAAX,CAA0BG,iBAA1B,CAAP,CACD,CAED,cAAenB,CAAAA,YAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"66fbccb2856b40b3a622d925568379e9\";\n\nconst NETWORK_NAME = \"rinkeby\";\n\nfunction useWeb3Modal(config = {}) {\n  const [provider, setProvider] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const { autoLoad = true, infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n  const web3Modal = new Web3Modal({\n    network: NETWORK,\n    cacheProvider: true,\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId,\n        },\n      },\n    },\n  });\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n\n  const logoutOfWeb3Modal = useCallback(\n    async function () {\n      await web3Modal.clearCachedProvider();\n      window.location.reload();\n    },\n    [web3Modal],\n  );\n\n  // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && web3Modal.cachedProvider) {\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal.cachedProvider]);\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n"]},"metadata":{},"sourceType":"module"}