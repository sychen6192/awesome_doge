{"ast":null,"code":"var _jsxFileName = \"/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakePage.js\";\nimport React from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nexport default function StakePage() {\n  async function getPolicies() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n    const policies = await policyFactoryContract.getDeloyedPolicies();\n    const item = policies.map(async (address, idx) => {\n      let policy = new Contract(address, abis.policy, provider);\n      let name = await policy.policyName();\n      console.log(name);\n    });\n  }\n\n  getPolicies();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    title: \"Stake\",\n    description: \"Earn rewards by staking SYC on policies you want to engage.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui three column grid\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakePage.js"],"names":["React","Jumbotron","styled","ethers","Contract","RINKEBY_ID","addresses","abis","StakePage","getPolicies","provider","providers","Web3Provider","window","ethereum","policyFactoryContract","policyFactory","policies","getDeloyedPolicies","item","map","address","idx","policy","name","policyName","console","log","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,QAA4C,2BAA5C;AAIA,eAAe,SAASC,SAAT,GAAqB;AAEhC,iBAAeC,WAAf,GAA6B;AACzB,UAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,UAAMC,qBAAqB,GAAG,IAAIX,QAAJ,CAAaE,SAAS,CAACD,UAAD,CAAT,CAAsBW,aAAnC,EAAkDT,IAAI,CAACS,aAAvD,EAAsEN,QAAtE,CAA9B;AAGA,UAAMO,QAAQ,GAAG,MAAMF,qBAAqB,CAACG,kBAAtB,EAAvB;AACA,UAAMC,IAAI,GAAIF,QAAQ,CAACG,GAAT,CAAa,OAAOC,OAAP,EAAgBC,GAAhB,KAAwB;AAC/C,UAAIC,MAAM,GAAG,IAAInB,QAAJ,CAAaiB,OAAb,EAAsBd,IAAI,CAACgB,MAA3B,EAAmCb,QAAnC,CAAb;AACA,UAAIc,IAAI,GAAG,MAAMD,MAAM,CAACE,UAAP,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEH,KALa,CAAd;AAMH;;AACDf,EAAAA,WAAW;AACX,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACA,IAAA,KAAK,EAAC,OADN;AAEA,IAAA,WAAW,EAAC,6DAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,KAAK,EAAE;AAAEmB,MAAAA,SAAS,EAAE;AAAb,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAYH","sourcesContent":["import React from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\n\n\n\nexport default function StakePage() {\n\n    async function getPolicies() {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n    \n    \n        const policies = await policyFactoryContract.getDeloyedPolicies();\n        const item =  policies.map(async (address, idx) => {\n            let policy = new Contract(address, abis.policy, provider);\n            let name = await policy.policyName()\n            console.log(name)\n    \n        }); \n    }\n    getPolicies();\n    return (\n        <div>\n            <Jumbotron \n            title=\"Stake\" \n            description=\"Earn rewards by staking SYC on policies you want to engage.\" />\n            <div className=\"ui three column grid\" style={{ marginTop: \"20px\" }}>\n                {/* <div className=\"column\">\n                    {getPolicies}\n                </div> */}\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}