{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar multipartRequest = require('../lib/multipart-request');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nvar anySignal = require('any-signal');\n\nvar AbortController = require('abort-controller');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n      var options,\n          controller,\n          signal,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              // allow aborting requests on body errors\n              controller = new AbortController();\n              signal = anySignal([controller.signal, options.signal]);\n              _context.t0 = api;\n              _context.t1 = _objectSpread;\n              _context.t2 = {\n                timeout: options.timeout,\n                signal: signal,\n                searchParams: toUrlSearchParams(options)\n              };\n              _context.next = 8;\n              return multipartRequest(Buffer.from(JSON.stringify(config)), controller, options.headers);\n\n            case 8:\n              _context.t3 = _context.sent;\n              _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n              _context.next = 12;\n              return _context.t0.post.call(_context.t0, 'config/replace', _context.t4);\n\n            case 12:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.text());\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/config/replace.js"],"names":["require","Buffer","multipartRequest","configure","toUrlSearchParams","anySignal","AbortController","module","exports","api","config","options","controller","signal","timeout","searchParams","from","JSON","stringify","headers","post","res","text"],"mappings":"AAAA;;;;;;;;eAEmBA,OAAO,CAAC,QAAD,C;IAAlBC,M,YAAAA,M;;AACR,IAAMC,gBAAgB,GAAGF,OAAO,CAAC,0BAAD,CAAhC;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AACA,IAAMK,SAAS,GAAGL,OAAO,CAAC,YAAD,CAAzB;;AACA,IAAMM,eAAe,GAAGN,OAAO,CAAC,kBAAD,CAA/B;;AAEAO,MAAM,CAACC,OAAP,GAAiBL,SAAS,CAAC,UAAAM,GAAG,EAAI;AAChC;AAAA,wEAAO,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAeC,cAAAA,OAAf,2DAAyB,EAAzB;AACL;AACMC,cAAAA,UAFD,GAEc,IAAIN,eAAJ,EAFd;AAGCO,cAAAA,MAHD,GAGUR,SAAS,CAAC,CAACO,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAAD,CAHnB;AAAA,4BAKaJ,GALb;AAAA;AAAA;AAMHK,gBAAAA,OAAO,EAAEH,OAAO,CAACG,OANd;AAOHD,gBAAAA,MAAM,EAANA,MAPG;AAQHE,gBAAAA,YAAY,EAAEX,iBAAiB,CAACO,OAAD;AAR5B;AAAA;AAAA,qBAUKT,gBAAgB,CAACD,MAAM,CAACe,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeR,MAAf,CAAZ,CAAD,EAAsCE,UAAtC,EAAkDD,OAAO,CAACQ,OAA1D,CAVrB;;AAAA;AAAA;AAAA;AAAA;AAAA,iCAKiBC,IALjB,mBAKsB,gBALtB;;AAAA;AAKCC,cAAAA,GALD;AAAA,+CAcEA,GAAG,CAACC,IAAJ,EAdF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAgBD,CAjByB,CAA1B","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst multipartRequest = require('../lib/multipart-request')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst anySignal = require('any-signal')\nconst AbortController = require('abort-controller')\n\nmodule.exports = configure(api => {\n  return async (config, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = anySignal([controller.signal, options.signal])\n\n    const res = await api.post('config/replace', {\n      timeout: options.timeout,\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...(\n        await multipartRequest(Buffer.from(JSON.stringify(config)), controller, options.headers)\n      )\n    })\n\n    return res.text()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}