{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _wrapAsyncGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _asyncGeneratorDelegate = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\");\n\nvar CID = require('cids');\n\nvar configure = require('./lib/configure');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _cat = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('cat', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: typeof path === 'string' ? path : new CID(path).toString()\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 3:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.iterator()), _awaitAsyncGenerator), \"t0\", 5);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function cat(_x) {\n      return _cat.apply(this, arguments);\n    }\n\n    return cat;\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/cat.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","path","options","post","timeout","signal","searchParams","arg","toString","headers","res","iterator","cat"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,4BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC;AAAA,0EAAO,iBAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4BC,cAAAA,OAA5B,2DAAsC,EAAtC;AAAA;AAAA,0CACaF,GAAG,CAACG,IAAJ,CAAS,KAAT,EAAgB;AAChCC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OADe;AAEhCC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAFgB;AAGhCC,gBAAAA,YAAY,EAAET,iBAAiB;AAC7BU,kBAAAA,GAAG,EAAE,OAAON,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkC,IAAIP,GAAJ,CAAQO,IAAR,EAAcO,QAAd;AADV,mBAE1BN,OAF0B,EAHC;AAOhCO,gBAAAA,OAAO,EAAEP,OAAO,CAACO;AAPe,eAAhB,CADb;;AAAA;AACCC,cAAAA,GADD;AAWL,mFAAQA,GAAG,CAACC,QAAJ,EAAR;;AAXK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA,aAAwBC,GAAxB;AAAA;AAAA;;AAAA,WAAwBA,GAAxB;AAAA;AAaD,CAdyB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async function * cat (path, options = {}) {\n    const res = await api.post('cat', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: typeof path === 'string' ? path : new CID(path).toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}