{"ast":null,"code":"var _jsxFileName = \"/Users/sychen/thesis-app/packages/react-app/src/components/Pages/ClaimsPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nexport default function ClaimsPage(props) {\n  const [policies, setPolicies] = useState(0);\n  const [minPremium, setminPremium] = useState(0);\n  const [totalDeposit, settotalDeposit] = useState('');\n  const [topupValue, setTopupValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const getPolicies = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n      const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n      const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id);\n      const policy = new Contract(policiesAddress, abis.policy, provider);\n      const policyInfo = await policy.getSummary();\n      setminPremium(policyInfo[3]);\n      setPolicies(policyInfo);\n    };\n\n    getPolicies();\n  }, []);\n\n  function createData(name, calories, fat, carbs, protein) {\n    return {\n      name,\n      calories,\n      fat,\n      carbs,\n      protein\n    };\n  }\n\n  const rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    title: \"Claims\",\n    description: \"Earn rewards by approving claims.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/components/Pages/ClaimsPage.js"],"names":["React","useState","useEffect","Jumbotron","styled","ethers","Contract","RINKEBY_ID","addresses","abis","Link","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","ClaimsPage","props","policies","setPolicies","minPremium","setminPremium","totalDeposit","settotalDeposit","topupValue","setTopupValue","loading","setLoading","getPolicies","provider","providers","Web3Provider","window","ethereum","signer","getSigner","account","getAddress","policyFactoryContract","policyFactory","policiesAddress","deployedPolicies","match","params","id","policy","policyInfo","getSummary","createData","name","calories","fat","carbs","protein","rows"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n  });\n\nexport default function ClaimsPage(props) {\n    const [policies, setPolicies] = useState(0);\n    const [minPremium, setminPremium] = useState(0);\n    const [totalDeposit, settotalDeposit] = useState('');\n    const [topupValue, setTopupValue] = useState('');\n    const [loading, setLoading] = useState(false);\n\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            const account = await signer.getAddress()\n\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider)\n            const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id)\n            const policy = new Contract(policiesAddress, abis.policy, provider)\n            const policyInfo = await policy.getSummary()\n\n            setminPremium(policyInfo[3])\n            setPolicies(policyInfo)\n        }\n\n        getPolicies();\n    }, []);\n\n\n  \n\n    function createData(name, calories, fat, carbs, protein) {\n        return { name, calories, fat, carbs, protein };\n      }\n      \n      const rows = [\n        createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n        createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n        createData('Eclair', 262, 16.0, 24, 6.0),\n        createData('Cupcake', 305, 3.7, 67, 4.3),\n        createData('Gingerbread', 356, 16.0, 49, 3.9),\n      ];\n      \n\n\n\n    return (\n        <div>\n            <Jumbotron\n                title=\"Claims\"\n                description=\"Earn rewards by approving claims.\" />\n           \n            </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}