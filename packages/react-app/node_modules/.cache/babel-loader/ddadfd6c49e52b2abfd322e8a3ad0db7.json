{"ast":null,"code":"var _jsxFileName = \"/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakeItem.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\nexport default function StakeItem() {\n  const [policies, setPolicies] = useState(0);\n  useEffect(() => {\n    const getPolicies = async () => {\n      let policy, summary;\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n      const policies = await policyFactoryContract.deployedPolicies();\n      const allPolicies = await Promise.all(policies.map((address, index) => {\n        policy = new Contract(address, abis.policy, provider);\n        return policy.getSummary();\n      }));\n      setPolicies(allPolicies);\n    };\n\n    getPolicies();\n  }, []); // async function onStake(idx) {\n  //     const provider = new ethers.providers.Web3Provider(window.ethereum);\n  //     const signer = provider.signer();\n  //     const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n  //     const policyAddress = await policyFactoryContract.deployedPolicies(idx);\n  //     const policy = new Contract(policyAddress, abis.policy, signer);\n  //     await policy.createStake()\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    title: \"Stake\",\n    description: \"Earn rewards by staking SYC on policies you want to engage.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakeItem.js"],"names":["React","useState","useEffect","Jumbotron","styled","ethers","Contract","RINKEBY_ID","addresses","abis","Link","StakeItem","policies","setPolicies","getPolicies","policy","summary","provider","providers","Web3Provider","window","ethereum","policyFactoryContract","policyFactory","deployedPolicies","allPolicies","Promise","all","map","address","index","getSummary"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,QAA4C,2BAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAGA,eAAe,SAASC,SAAT,GAAqB;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,WAAW,GAAG,YAAY;AAC5B,UAAIC,MAAJ,EAAYC,OAAZ;AACA,YAAMC,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMC,qBAAqB,GAAG,IAAIhB,QAAJ,CAAaE,SAAS,CAACD,UAAD,CAAT,CAAsBgB,aAAnC,EAAkDd,IAAI,CAACc,aAAvD,EAAsEN,QAAtE,CAA9B;AACA,YAAML,QAAQ,GAAG,MAAMU,qBAAqB,CAACE,gBAAtB,EAAvB;AAEA,YAAMC,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAR,CACtBf,QAAQ,CACHgB,GADL,CACS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrBf,QAAAA,MAAM,GAAG,IAAIT,QAAJ,CAAauB,OAAb,EAAsBpB,IAAI,CAACM,MAA3B,EAAmCE,QAAnC,CAAT;AACA,eAAOF,MAAM,CAACgB,UAAP,EAAP;AACH,OAJL,CADsB,CAA1B;AAOAlB,MAAAA,WAAW,CAACY,WAAD,CAAX;AACH,KAdD;;AAeAX,IAAAA,WAAW;AACd,GAjBQ,EAiBN,EAjBM,CAAT,CAHgC,CAuBhC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,WAAW,EAAC,6DAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAOH","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\n\n\nexport default function StakeItem() {\n    const [policies, setPolicies] = useState(0);\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            let policy, summary;\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n            const policies = await policyFactoryContract.deployedPolicies();\n\n            const allPolicies = await Promise.all(\n                policies\n                    .map((address, index) => {\n                        policy = new Contract(address, abis.policy, provider);\n                        return policy.getSummary();\n                    }));\n\n            setPolicies(allPolicies);\n        }\n        getPolicies();\n    }, []);\n\n\n    // async function onStake(idx) {\n    //     const provider = new ethers.providers.Web3Provider(window.ethereum);\n    //     const signer = provider.signer();\n    //     const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n    //     const policyAddress = await policyFactoryContract.deployedPolicies(idx);\n    //     const policy = new Contract(policyAddress, abis.policy, signer);\n    //     await policy.createStake()\n\n    // }\n\n\n    return (\n        <div>\n            <Jumbotron\n                title=\"Stake\"\n                description=\"Earn rewards by staking SYC on policies you want to engage.\" />\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}