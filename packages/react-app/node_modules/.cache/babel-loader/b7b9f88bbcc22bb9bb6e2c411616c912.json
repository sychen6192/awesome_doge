{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar CID = require('cids');\n\nvar multiaddr = require('multiaddr');\n\nvar toCamel = require('../lib/object-to-camel');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _query = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(peerId) {\n      var options,\n          res,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          message,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('dht/query', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: new CID(peerId)\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 3:\n              res = _context.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 8:\n              _context.next = 10;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 10:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 14;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 14:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 25;\n                break;\n              }\n\n              message = _value;\n              message = toCamel(message);\n              message.id = new CID(message.id);\n              message.responses = (message.responses || []).map(function (_ref) {\n                var ID = _ref.ID,\n                    Addrs = _ref.Addrs;\n                return {\n                  id: ID,\n                  addrs: (Addrs || []).map(function (a) {\n                    return multiaddr(a);\n                  })\n                };\n              });\n              _context.next = 22;\n              return message;\n\n            case 22:\n              _iteratorNormalCompletion = true;\n              _context.next = 8;\n              break;\n\n            case 25:\n              _context.next = 31;\n              break;\n\n            case 27:\n              _context.prev = 27;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 31:\n              _context.prev = 31;\n              _context.prev = 32;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 36;\n                break;\n              }\n\n              _context.next = 36;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 36:\n              _context.prev = 36;\n\n              if (!_didIteratorError) {\n                _context.next = 39;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 39:\n              return _context.finish(36);\n\n            case 40:\n              return _context.finish(31);\n\n            case 41:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 27, 31, 41], [32,, 36, 40]]);\n    }));\n\n    function query(_x) {\n      return _query.apply(this, arguments);\n    }\n\n    return query;\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/dht/query.js"],"names":["CID","require","multiaddr","toCamel","configure","toUrlSearchParams","module","exports","api","peerId","options","post","timeout","signal","searchParams","arg","headers","res","ndjson","message","id","responses","map","ID","Addrs","addrs","a","query"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AAEAK,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC;AAAA,4EAAO,iBAAwBC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAgCC,cAAAA,OAAhC,2DAA0C,EAA1C;AAAA;AAAA,0CACaF,GAAG,CAACG,IAAJ,CAAS,WAAT,EAAsB;AACtCC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OADqB;AAEtCC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAFsB;AAGtCC,gBAAAA,YAAY,EAAET,iBAAiB;AAC7BU,kBAAAA,GAAG,EAAE,IAAIf,GAAJ,CAAQS,MAAR;AADwB,mBAE1BC,OAF0B,EAHO;AAOtCM,gBAAAA,OAAO,EAAEN,OAAO,CAACM;AAPqB,eAAtB,CADb;;AAAA;AACCC,cAAAA,GADD;AAAA;AAAA;AAAA;AAAA,yCAWqBA,GAAG,CAACC,MAAJ,EAXrB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAWUC,cAAAA,OAXV;AAYHA,cAAAA,OAAO,GAAGhB,OAAO,CAACgB,OAAD,CAAjB;AACAA,cAAAA,OAAO,CAACC,EAAR,GAAa,IAAIpB,GAAJ,CAAQmB,OAAO,CAACC,EAAhB,CAAb;AACAD,cAAAA,OAAO,CAACE,SAAR,GAAoB,CAACF,OAAO,CAACE,SAAR,IAAqB,EAAtB,EAA0BC,GAA1B,CAA8B;AAAA,oBAAGC,EAAH,QAAGA,EAAH;AAAA,oBAAOC,KAAP,QAAOA,KAAP;AAAA,uBAAoB;AACpEJ,kBAAAA,EAAE,EAAEG,EADgE;AAEpEE,kBAAAA,KAAK,EAAE,CAACD,KAAK,IAAI,EAAV,EAAcF,GAAd,CAAkB,UAAAI,CAAC;AAAA,2BAAIxB,SAAS,CAACwB,CAAD,CAAb;AAAA,mBAAnB;AAF6D,iBAApB;AAAA,eAA9B,CAApB;AAdG;AAkBH,qBAAMP,OAAN;;AAlBG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA,aAAwBQ,KAAxB;AAAA;AAAA;;AAAA,WAAwBA,KAAxB;AAAA;AAqBD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst multiaddr = require('multiaddr')\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async function * query (peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: new CID(peerId),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (let message of res.ndjson()) {\n      message = toCamel(message)\n      message.id = new CID(message.id)\n      message.responses = (message.responses || []).map(({ ID, Addrs }) => ({\n        id: ID,\n        addrs: (Addrs || []).map(a => multiaddr(a))\n      }))\n      yield message\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"script"}