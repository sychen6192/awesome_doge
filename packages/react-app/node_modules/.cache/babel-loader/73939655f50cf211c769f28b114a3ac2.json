{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar Tar = require('it-tar');\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar CID = require('cids');\n\nvar configure = require('./lib/configure');\n\nvar toUrlSearchParams = require('./lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _get = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n      var options,\n          res,\n          extractor,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          _value2,\n          header,\n          body,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('get', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: \"\".concat(Buffer.isBuffer(path) ? new CID(path) : path)\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 3:\n              res = _context.sent;\n              extractor = Tar.extract();\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 7;\n              _iterator = _asyncIterator(extractor(res.iterator()));\n\n            case 9:\n              _context.next = 11;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 11:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 15;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 15:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 28;\n                break;\n              }\n\n              _value2 = _value, header = _value2.header, body = _value2.body;\n\n              if (!(header.type === 'directory')) {\n                _context.next = 23;\n                break;\n              }\n\n              _context.next = 21;\n              return {\n                path: header.name\n              };\n\n            case 21:\n              _context.next = 25;\n              break;\n\n            case 23:\n              _context.next = 25;\n              return {\n                path: header.name,\n                content: body\n              };\n\n            case 25:\n              _iteratorNormalCompletion = true;\n              _context.next = 9;\n              break;\n\n            case 28:\n              _context.next = 34;\n              break;\n\n            case 30:\n              _context.prev = 30;\n              _context.t0 = _context[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 34:\n              _context.prev = 34;\n              _context.prev = 35;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 39;\n                break;\n              }\n\n              _context.next = 39;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 39:\n              _context.prev = 39;\n\n              if (!_didIteratorError) {\n                _context.next = 42;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 42:\n              return _context.finish(39);\n\n            case 43:\n              return _context.finish(34);\n\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 30, 34, 44], [35,, 39, 43]]);\n    }));\n\n    function get(_x) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/get.js"],"names":["Tar","require","Buffer","CID","configure","toUrlSearchParams","module","exports","api","path","options","post","timeout","signal","searchParams","arg","isBuffer","headers","res","extractor","extract","iterator","header","body","type","name","content","get"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;eACmBA,OAAO,CAAC,QAAD,C;IAAlBC,M,YAAAA,M;;AACR,IAAMC,GAAG,GAAGF,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,4BAAD,CAAjC;;AAEAK,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC;AAAA,0EAAO,iBAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA4BC,cAAAA,OAA5B,2DAAsC,EAAtC;AAAA;AAAA,0CACaF,GAAG,CAACG,IAAJ,CAAS,KAAT,EAAgB;AAChCC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OADe;AAEhCC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAFgB;AAGhCC,gBAAAA,YAAY,EAAET,iBAAiB;AAC7BU,kBAAAA,GAAG,YAAKb,MAAM,CAACc,QAAP,CAAgBP,IAAhB,IAAwB,IAAIN,GAAJ,CAAQM,IAAR,CAAxB,GAAwCA,IAA7C;AAD0B,mBAE1BC,OAF0B,EAHC;AAOhCO,gBAAAA,OAAO,EAAEP,OAAO,CAACO;AAPe,eAAhB,CADb;;AAAA;AACCC,cAAAA,GADD;AAWCC,cAAAA,SAXD,GAWanB,GAAG,CAACoB,OAAJ,EAXb;AAAA;AAAA;AAAA;AAAA,yCAagCD,SAAS,CAACD,GAAG,CAACG,QAAJ,EAAD,CAbzC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,gCAacC,MAbd,WAacA,MAbd,EAasBC,IAbtB,WAasBA,IAbtB;;AAAA,oBAcCD,MAAM,CAACE,IAAP,KAAgB,WAdjB;AAAA;AAAA;AAAA;;AAAA;AAeD,qBAAM;AACJf,gBAAAA,IAAI,EAAEa,MAAM,CAACG;AADT,eAAN;;AAfC;AAAA;AAAA;;AAAA;AAAA;AAmBD,qBAAM;AACJhB,gBAAAA,IAAI,EAAEa,MAAM,CAACG,IADT;AAEJC,gBAAAA,OAAO,EAAEH;AAFL,eAAN;;AAnBC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA,aAAwBI,GAAxB;AAAA;AAAA;;AAAA,WAAwBA,GAAxB;AAAA;AA0BD,CA3ByB,CAA1B","sourcesContent":["'use strict'\n\nconst Tar = require('it-tar')\nconst { Buffer } = require('buffer')\nconst CID = require('cids')\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async function * get (path, options = {}) {\n    const res = await api.post('get', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${Buffer.isBuffer(path) ? new CID(path) : path}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const extractor = Tar.extract()\n\n    for await (const { header, body } of extractor(res.iterator())) {\n      if (header.type === 'directory') {\n        yield {\n          path: header.name\n        }\n      } else {\n        yield {\n          path: header.name,\n          content: body\n        }\n      }\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"script"}