{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar toCamel = require('../lib/object-to-camel');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key, value) {\n      var options,\n          params,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n\n              if (!(typeof key !== 'string')) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error('Invalid key type');\n\n            case 3:\n              params = _objectSpread({\n                arg: [key, value]\n              }, options);\n\n              if (typeof value === 'boolean') {\n                params.arg[1] = value.toString();\n                params.bool = true;\n              } else if (typeof value !== 'string') {\n                params.arg[1] = JSON.stringify(value);\n                params.json = true;\n              }\n\n              _context.next = 7;\n              return api.post('config', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(params),\n                headers: options.headers\n              });\n\n            case 7:\n              res = _context.sent;\n              _context.t0 = toCamel;\n              _context.next = 11;\n              return res.json();\n\n            case 11:\n              _context.t1 = _context.sent;\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/config/set.js"],"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","key","value","options","Error","params","arg","toString","bool","JSON","stringify","json","post","timeout","signal","searchParams","headers","res"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC;AAAA,wEAAO,iBAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmBC,cAAAA,OAAnB,2DAA6B,EAA7B;;AAAA,oBACD,OAAOF,GAAP,KAAe,QADd;AAAA;AAAA;AAAA;;AAAA,oBAEG,IAAIG,KAAJ,CAAU,kBAAV,CAFH;;AAAA;AAKCC,cAAAA,MALD;AAMHC,gBAAAA,GAAG,EAAE,CACHL,GADG,EAEHC,KAFG;AANF,iBAUAC,OAVA;;AAaL,kBAAI,OAAOD,KAAP,KAAiB,SAArB,EAAgC;AAC9BG,gBAAAA,MAAM,CAACC,GAAP,CAAW,CAAX,IAAgBJ,KAAK,CAACK,QAAN,EAAhB;AACAF,gBAAAA,MAAM,CAACG,IAAP,GAAc,IAAd;AACD,eAHD,MAGO,IAAI,OAAON,KAAP,KAAiB,QAArB,EAA+B;AACpCG,gBAAAA,MAAM,CAACC,GAAP,CAAW,CAAX,IAAgBG,IAAI,CAACC,SAAL,CAAeR,KAAf,CAAhB;AACAG,gBAAAA,MAAM,CAACM,IAAP,GAAc,IAAd;AACD;;AAnBI;AAAA,qBAqBaX,GAAG,CAACY,IAAJ,CAAS,QAAT,EAAmB;AACnCC,gBAAAA,OAAO,EAAEV,OAAO,CAACU,OADkB;AAEnCC,gBAAAA,MAAM,EAAEX,OAAO,CAACW,MAFmB;AAGnCC,gBAAAA,YAAY,EAAElB,iBAAiB,CAACQ,MAAD,CAHI;AAInCW,gBAAAA,OAAO,EAAEb,OAAO,CAACa;AAJkB,eAAnB,CArBb;;AAAA;AAqBCC,cAAAA,GArBD;AAAA,4BA4BEvB,OA5BF;AAAA;AAAA,qBA4BgBuB,GAAG,CAACN,IAAJ,EA5BhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AA8BD,CA/ByB,CAA1B","sourcesContent":["'use strict'\n\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type')\n    }\n\n    const params = {\n      arg: [\n        key,\n        value\n      ],\n      ...options\n    }\n\n    if (typeof value === 'boolean') {\n      params.arg[1] = value.toString()\n      params.bool = true\n    } else if (typeof value !== 'string') {\n      params.arg[1] = JSON.stringify(value)\n      params.json = true\n    }\n\n    const res = await api.post('config', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(params),\n      headers: options.headers\n    })\n\n    return toCamel(await res.json())\n  }\n})\n"]},"metadata":{},"sourceType":"script"}