{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _asyncIterator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nvar _require2 = require('./response-types'),\n    Value = _require2.Value;\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n      var options,\n          res,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          message,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('dht/get', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: Buffer.isBuffer(key) ? key.toString() : key\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 8:\n              _context.next = 10;\n              return _iterator.next();\n\n            case 10:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 14;\n              return _step.value;\n\n            case 14:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 22;\n                break;\n              }\n\n              message = _value;\n\n              if (!(message.Type === Value)) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt(\"return\", Buffer.from(message.Extra, 'base64'));\n\n            case 19:\n              _iteratorNormalCompletion = true;\n              _context.next = 8;\n              break;\n\n            case 22:\n              _context.next = 28;\n              break;\n\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 28:\n              _context.prev = 28;\n              _context.prev = 29;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 33;\n                break;\n              }\n\n              _context.next = 33;\n              return _iterator.return();\n\n            case 33:\n              _context.prev = 33;\n\n              if (!_didIteratorError) {\n                _context.next = 36;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 36:\n              return _context.finish(33);\n\n            case 37:\n              return _context.finish(28);\n\n            case 38:\n              throw new Error('not found');\n\n            case 39:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 24, 28, 38], [29,, 33, 37]]);\n    }));\n\n    function get(_x) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/dht/get.js"],"names":["require","Buffer","configure","toUrlSearchParams","Value","module","exports","api","key","options","post","timeout","signal","searchParams","arg","isBuffer","toString","headers","res","ndjson","message","Type","from","Extra","Error","get"],"mappings":"AAAA;;;;;;;;;;eAEmBA,OAAO,CAAC,QAAD,C;IAAlBC,M,YAAAA,M;;AACR,IAAMC,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;;gBACkBA,OAAO,CAAC,kBAAD,C;IAAjBI,K,aAAAA,K;;AAERC,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,UAAAK,GAAG,EAAI;AAChC;AAAA,wEAAO,iBAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAyBC,cAAAA,OAAzB,2DAAmC,EAAnC;AAAA;AAAA,qBACaF,GAAG,CAACG,IAAJ,CAAS,SAAT,EAAoB;AACpCC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OADmB;AAEpCC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAFoB;AAGpCC,gBAAAA,YAAY,EAAEV,iBAAiB;AAC7BW,kBAAAA,GAAG,EAAEb,MAAM,CAACc,QAAP,CAAgBP,GAAhB,IAAuBA,GAAG,CAACQ,QAAJ,EAAvB,GAAwCR;AADhB,mBAE1BC,OAF0B,EAHK;AAOpCQ,gBAAAA,OAAO,EAAER,OAAO,CAACQ;AAPmB,eAApB,CADb;;AAAA;AACCC,cAAAA,GADD;AAAA;AAAA;AAAA;AAAA,yCAWuBA,GAAG,CAACC,MAAJ,EAXvB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAWYC,cAAAA,OAXZ;;AAAA,oBAYCA,OAAO,CAACC,IAAR,KAAiBjB,KAZlB;AAAA;AAAA;AAAA;;AAAA,+CAaMH,MAAM,CAACqB,IAAP,CAAYF,OAAO,CAACG,KAApB,EAA2B,QAA3B,CAbN;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,oBAiBC,IAAIC,KAAJ,CAAU,WAAV,CAjBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA,aAAsBC,GAAtB;AAAA;AAAA;;AAAA,WAAsBA,GAAtB;AAAA;AAmBD,CApByB,CAA1B","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst { Value } = require('./response-types')\n\nmodule.exports = configure(api => {\n  return async function get (key, options = {}) {\n    const res = await api.post('dht/get', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: Buffer.isBuffer(key) ? key.toString() : key,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const message of res.ndjson()) {\n      if (message.Type === Value) {\n        return Buffer.from(message.Extra, 'base64')\n      }\n    }\n\n    throw new Error('not found')\n  }\n})\n"]},"metadata":{},"sourceType":"script"}