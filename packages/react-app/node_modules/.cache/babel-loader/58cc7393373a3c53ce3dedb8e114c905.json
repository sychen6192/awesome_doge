{"ast":null,"code":"'use strict';\n\nfunction peekableIterator(iterable) {\n  var iterator = iterable[Symbol.asyncIterator] ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n  var queue = [];\n  var peekable = {\n    peek: function peek() {\n      return iterator.next();\n    },\n    push: function push(value) {\n      queue.push(value);\n    },\n    next: function next() {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        };\n      }\n\n      return iterator.next();\n    }\n  };\n\n  if (iterable[Symbol.asyncIterator]) {\n    peekable[Symbol.asyncIterator] = function () {\n      return peekable;\n    };\n  } else {\n    peekable[Symbol.iterator] = function () {\n      return peekable;\n    };\n  }\n\n  return peekable;\n}\n\nmodule.exports = peekableIterator;","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/it-peekable/index.js"],"names":["peekableIterator","iterable","iterator","Symbol","asyncIterator","queue","peekable","peek","next","push","value","length","done","shift","module","exports"],"mappings":"AAAA;;AAEA,SAASA,gBAAT,CAA2BC,QAA3B,EAAqC;AACnC,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACC,aAAR,CAAR,GAAiCH,QAAQ,CAACE,MAAM,CAACC,aAAR,CAAR,EAAjC,GAAoEH,QAAQ,CAACE,MAAM,CAACD,QAAR,CAAR,EAArF;AACA,MAAMG,KAAK,GAAG,EAAd;AAEA,MAAMC,QAAQ,GAAG;AACfC,IAAAA,IAAI,EAAE,gBAAM;AACV,aAAOL,QAAQ,CAACM,IAAT,EAAP;AACD,KAHc;AAIfC,IAAAA,IAAI,EAAE,cAACC,KAAD,EAAW;AACfL,MAAAA,KAAK,CAACI,IAAN,CAAWC,KAAX;AACD,KANc;AAOfF,IAAAA,IAAI,EAAE,gBAAM;AACV,UAAIH,KAAK,CAACM,MAAV,EAAkB;AAChB,eAAO;AACLC,UAAAA,IAAI,EAAE,KADD;AAELF,UAAAA,KAAK,EAAEL,KAAK,CAACQ,KAAN;AAFF,SAAP;AAID;;AAED,aAAOX,QAAQ,CAACM,IAAT,EAAP;AACD;AAhBc,GAAjB;;AAmBA,MAAIP,QAAQ,CAACE,MAAM,CAACC,aAAR,CAAZ,EAAoC;AAClCE,IAAAA,QAAQ,CAACH,MAAM,CAACC,aAAR,CAAR,GAAiC,YAAM;AACrC,aAAOE,QAAP;AACD,KAFD;AAGD,GAJD,MAIO;AACLA,IAAAA,QAAQ,CAACH,MAAM,CAACD,QAAR,CAAR,GAA4B,YAAM;AAChC,aAAOI,QAAP;AACD,KAFD;AAGD;;AAED,SAAOA,QAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBf,gBAAjB","sourcesContent":["'use strict'\n\nfunction peekableIterator (iterable) {\n  const iterator = iterable[Symbol.asyncIterator] ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]()\n  const queue = []\n\n  const peekable = {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    }\n  }\n\n  if (iterable[Symbol.asyncIterator]) {\n    peekable[Symbol.asyncIterator] = () => {\n      return peekable\n    }\n  } else {\n    peekable[Symbol.iterator] = () => {\n      return peekable\n    }\n  }\n\n  return peekable\n}\n\nmodule.exports = peekableIterator\n"]},"metadata":{},"sourceType":"script"}