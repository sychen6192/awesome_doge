{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar CID = require('cids');\n\nvar configure = require('../../lib/configure');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, dLink) {\n      var options,\n          res,\n          _yield$res$json,\n          Hash,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              _context.next = 3;\n              return api.post('object/patch/rm-link', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: [\"\".concat(Buffer.isBuffer(cid) ? new CID(cid) : cid), dLink.Name || dLink.name || null]\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _yield$res$json = _context.sent;\n              Hash = _yield$res$json.Hash;\n              return _context.abrupt(\"return\", new CID(Hash));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/object/patch/rm-link.js"],"names":["require","Buffer","CID","configure","toUrlSearchParams","module","exports","api","cid","dLink","options","post","timeout","signal","searchParams","arg","isBuffer","Name","name","headers","res","json","Hash"],"mappings":"AAAA;;;;;;;;eAEmBA,OAAO,CAAC,QAAD,C;IAAlBC,M,YAAAA,M;;AACR,IAAMC,GAAG,GAAGF,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,gCAAD,CAAjC;;AAEAK,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC;AAAA,wEAAO,iBAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAmBC,cAAAA,OAAnB,2DAA6B,EAA7B;AAAA;AAAA,qBACaH,GAAG,CAACI,IAAJ,CAAS,sBAAT,EAAiC;AACjDC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OADgC;AAEjDC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAFiC;AAGjDC,gBAAAA,YAAY,EAAEV,iBAAiB;AAC7BW,kBAAAA,GAAG,EAAE,WACAd,MAAM,CAACe,QAAP,CAAgBR,GAAhB,IAAuB,IAAIN,GAAJ,CAAQM,GAAR,CAAvB,GAAsCA,GADtC,GAEHC,KAAK,CAACQ,IAAN,IAAcR,KAAK,CAACS,IAApB,IAA4B,IAFzB;AADwB,mBAK1BR,OAL0B,EAHkB;AAUjDS,gBAAAA,OAAO,EAAET,OAAO,CAACS;AAVgC,eAAjC,CADb;;AAAA;AACCC,cAAAA,GADD;AAAA;AAAA,qBAckBA,GAAG,CAACC,IAAJ,EAdlB;;AAAA;AAAA;AAcGC,cAAAA,IAdH,mBAcGA,IAdH;AAAA,+CAgBE,IAAIpB,GAAJ,CAAQoB,IAAR,CAhBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAkBD,CAnByB,CAA1B","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst CID = require('cids')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (cid, dLink, options = {}) => {\n    const res = await api.post('object/patch/rm-link', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${Buffer.isBuffer(cid) ? new CID(cid) : cid}`,\n          dLink.Name || dLink.name || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return new CID(Hash)\n  }\n})\n"]},"metadata":{},"sourceType":"script"}