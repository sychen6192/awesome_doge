{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar CID = require('cids');\n\nvar multipartRequest = require('../../lib/multipart-request');\n\nvar configure = require('../../lib/configure');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params');\n\nvar anySignal = require('any-signal');\n\nvar AbortController = require('abort-controller');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, data) {\n      var options,\n          controller,\n          signal,\n          _yield$yield$api$post,\n          Hash,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              // allow aborting requests on body errors\n              controller = new AbortController();\n              signal = anySignal([controller.signal, options.signal]);\n              _context.t0 = api;\n              _context.t1 = _objectSpread;\n              _context.t2 = {\n                timeout: options.timeout,\n                signal: signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: [\"\".concat(Buffer.isBuffer(cid) ? new CID(cid) : cid)]\n                }, options))\n              };\n              _context.next = 8;\n              return multipartRequest(data, controller, options.headers);\n\n            case 8:\n              _context.t3 = _context.sent;\n              _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n              _context.next = 12;\n              return _context.t0.post.call(_context.t0, 'object/patch/set-data', _context.t4);\n\n            case 12:\n              _context.next = 14;\n              return _context.sent.json();\n\n            case 14:\n              _yield$yield$api$post = _context.sent;\n              Hash = _yield$yield$api$post.Hash;\n              return _context.abrupt(\"return\", new CID(Hash));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/object/patch/set-data.js"],"names":["require","Buffer","CID","multipartRequest","configure","toUrlSearchParams","anySignal","AbortController","module","exports","api","cid","data","options","controller","signal","timeout","searchParams","arg","isBuffer","headers","post","json","Hash"],"mappings":"AAAA;;;;;;;;eAEmBA,OAAO,CAAC,QAAD,C;IAAlBC,M,YAAAA,M;;AACR,IAAMC,GAAG,GAAGF,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,6BAAD,CAAhC;;AACA,IAAMI,SAAS,GAAGJ,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAMK,iBAAiB,GAAGL,OAAO,CAAC,gCAAD,CAAjC;;AACA,IAAMM,SAAS,GAAGN,OAAO,CAAC,YAAD,CAAzB;;AACA,IAAMO,eAAe,GAAGP,OAAO,CAAC,kBAAD,CAA/B;;AAEAQ,MAAM,CAACC,OAAP,GAAiBL,SAAS,CAAC,UAAAM,GAAG,EAAI;AAChC;AAAA,wEAAO,iBAAOC,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAkBC,cAAAA,OAAlB,2DAA4B,EAA5B;AACL;AACMC,cAAAA,UAFD,GAEc,IAAIP,eAAJ,EAFd;AAGCQ,cAAAA,MAHD,GAGUT,SAAS,CAAC,CAACQ,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAAD,CAHnB;AAAA,4BAKyBL,GALzB;AAAA;AAAA;AAMHM,gBAAAA,OAAO,EAAEH,OAAO,CAACG,OANd;AAOHD,gBAAAA,MAAM,EAANA,MAPG;AAQHE,gBAAAA,YAAY,EAAEZ,iBAAiB;AAC7Ba,kBAAAA,GAAG,EAAE,WACAjB,MAAM,CAACkB,QAAP,CAAgBR,GAAhB,IAAuB,IAAIT,GAAJ,CAAQS,GAAR,CAAvB,GAAsCA,GADtC;AADwB,mBAI1BE,OAJ0B;AAR5B;AAAA;AAAA,qBAeKV,gBAAgB,CAACS,IAAD,EAAOE,UAAP,EAAmBD,OAAO,CAACO,OAA3B,CAfrB;;AAAA;AAAA;AAAA;AAAA;AAAA,iCAK6BC,IAL7B,mBAKkC,uBALlC;;AAAA;AAAA;AAAA,mCAiBDC,IAjBC;;AAAA;AAAA;AAKGC,cAAAA,IALH,yBAKGA,IALH;AAAA,+CAmBE,IAAIrB,GAAJ,CAAQqB,IAAR,CAnBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAqBD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst CID = require('cids')\nconst multipartRequest = require('../../lib/multipart-request')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\nconst anySignal = require('any-signal')\nconst AbortController = require('abort-controller')\n\nmodule.exports = configure(api => {\n  return async (cid, data, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = anySignal([controller.signal, options.signal])\n\n    const { Hash } = await (await api.post('object/patch/set-data', {\n      timeout: options.timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${Buffer.isBuffer(cid) ? new CID(cid) : cid}`\n        ],\n        ...options\n      }),\n      ...(\n        await multipartRequest(data, controller, options.headers)\n      )\n    })).json()\n\n    return new CID(Hash)\n  }\n})\n"]},"metadata":{},"sourceType":"script"}