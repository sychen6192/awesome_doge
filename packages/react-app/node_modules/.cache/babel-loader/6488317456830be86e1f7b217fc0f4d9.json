{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('bignumber.js'),\n    BigNumber = _require.BigNumber;\n\nvar CID = require('cids');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var options,\n        res,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return api.post('bitswap/stat', {\n              searchParams: toUrlSearchParams(options),\n              timeout: options.timeout,\n              signal: options.signal,\n              headers: options.headers\n            });\n\n          case 3:\n            res = _context.sent;\n            _context.t0 = toCoreInterface;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n});\n\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(function (k) {\n      return new CID(k['/']);\n    }),\n    peers: res.Peers || [],\n    blocksReceived: new BigNumber(res.BlocksReceived),\n    dataReceived: new BigNumber(res.DataReceived),\n    blocksSent: new BigNumber(res.BlocksSent),\n    dataSent: new BigNumber(res.DataSent),\n    dupBlksReceived: new BigNumber(res.DupBlksReceived),\n    dupDataReceived: new BigNumber(res.DupDataReceived)\n  };\n}","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/bitswap/stat.js"],"names":["require","BigNumber","CID","configure","toUrlSearchParams","module","exports","api","options","post","searchParams","timeout","signal","headers","res","toCoreInterface","json","provideBufLen","ProvideBufLen","wantlist","Wantlist","map","k","peers","Peers","blocksReceived","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived"],"mappings":"AAAA;;;;;;eAEsBA,OAAO,CAAC,cAAD,C;IAArBC,S,YAAAA,S;;AACR,IAAMC,GAAG,GAAGF,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AAEAK,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC,+EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,YAAAA,OAAP,2DAAiB,EAAjB;AAAA;AAAA,mBACaD,GAAG,CAACE,IAAJ,CAAS,cAAT,EAAyB;AACzCC,cAAAA,YAAY,EAAEN,iBAAiB,CAACI,OAAD,CADU;AAEzCG,cAAAA,OAAO,EAAEH,OAAO,CAACG,OAFwB;AAGzCC,cAAAA,MAAM,EAAEJ,OAAO,CAACI,MAHyB;AAIzCC,cAAAA,OAAO,EAAEL,OAAO,CAACK;AAJwB,aAAzB,CADb;;AAAA;AACCC,YAAAA,GADD;AAAA,0BAQEC,eARF;AAAA;AAAA,mBAQwBD,GAAG,CAACE,IAAJ,EARxB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAUD,CAXyB,CAA1B;;AAaA,SAASD,eAAT,CAA0BD,GAA1B,EAA+B;AAC7B,SAAO;AACLG,IAAAA,aAAa,EAAEH,GAAG,CAACI,aADd;AAELC,IAAAA,QAAQ,EAAE,CAACL,GAAG,CAACM,QAAJ,IAAgB,EAAjB,EAAqBC,GAArB,CAAyB,UAAAC,CAAC;AAAA,aAAI,IAAIpB,GAAJ,CAAQoB,CAAC,CAAC,GAAD,CAAT,CAAJ;AAAA,KAA1B,CAFL;AAGLC,IAAAA,KAAK,EAAGT,GAAG,CAACU,KAAJ,IAAa,EAHhB;AAILC,IAAAA,cAAc,EAAE,IAAIxB,SAAJ,CAAca,GAAG,CAACY,cAAlB,CAJX;AAKLC,IAAAA,YAAY,EAAE,IAAI1B,SAAJ,CAAca,GAAG,CAACc,YAAlB,CALT;AAMLC,IAAAA,UAAU,EAAE,IAAI5B,SAAJ,CAAca,GAAG,CAACgB,UAAlB,CANP;AAOLC,IAAAA,QAAQ,EAAE,IAAI9B,SAAJ,CAAca,GAAG,CAACkB,QAAlB,CAPL;AAQLC,IAAAA,eAAe,EAAE,IAAIhC,SAAJ,CAAca,GAAG,CAACoB,eAAlB,CARZ;AASLC,IAAAA,eAAe,EAAE,IAAIlC,SAAJ,CAAca,GAAG,CAACsB,eAAlB;AATZ,GAAP;AAWD","sourcesContent":["'use strict'\n\nconst { BigNumber } = require('bignumber.js')\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (options = {}) => {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n})\n\nfunction toCoreInterface (res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => new CID(k['/'])),\n    peers: (res.Peers || []),\n    blocksReceived: new BigNumber(res.BlocksReceived),\n    dataReceived: new BigNumber(res.DataReceived),\n    blocksSent: new BigNumber(res.BlocksSent),\n    dataSent: new BigNumber(res.DataSent),\n    dupBlksReceived: new BigNumber(res.DupBlksReceived),\n    dupDataReceived: new BigNumber(res.DupDataReceived)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}