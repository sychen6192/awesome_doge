{"ast":null,"code":"var _jsxFileName = \"/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakeholdersPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport CircularProgressWithLabel from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  approve: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative'\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12\n  }\n}));\nexport default function StakeholdersPage(props) {\n  const classes = useStyles();\n  const [policyAddress, setPolicyAddress] = useState(0);\n  const [requests, setRequests] = useState([]);\n  const [stakeHolders, setStakeHolders] = useState([]);\n  const [stakeHoldersAddress, setStakeHoldersAddress] = useState([]);\n  const [delegatorCount, setDelegatorCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [requestCount, setRequestCount] = useState(0);\n  const [isDelegator, setIsDelegator] = useState(false);\n  const [endorsers, setEndorsers] = useState([]);\n  useEffect(() => {\n    const getPolicies = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n      const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n      const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id);\n      const policy = new Contract(policiesAddress, abis.policy, provider);\n      const policyStakeHolders = await policy.getPolicyStakeholders();\n      const requestCount = await policy.getRequestsCount();\n      const registryContract = new Contract(addresses[RINKEBY_ID].registry, abis.registry, provider);\n      const delegatorCount = await registryContract.getDelegatorCount();\n      const isDelegator = await registryContract.validDelegators(account);\n      setStakeHoldersAddress(policyStakeHolders);\n      setIsDelegator(isDelegator);\n      setRequestCount(requestCount);\n      setDelegatorCount(parseInt(delegatorCount.toString()));\n      setPolicyAddress(policiesAddress);\n      const stakeholders = await Promise.all(policyStakeHolders.map((address, index) => {\n        return registryContract.mapInsurers(address);\n      }));\n      const endorsers = await Promise.all(policyStakeHolders.map((endorser, index) => {\n        return policy.endorser(endorser);\n      }));\n      setEndorsers(endorsers);\n      setStakeHolders(stakeholders);\n    };\n\n    getPolicies();\n  }, []);\n\n  async function delApprove(idx) {\n    try {\n      let tx;\n      setLoading(true);\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const policyContract = new Contract(policyAddress, abis.policy, signer);\n      tx = await policyContract.delApproveRequest(idx); // until transactionHash is mined.\n\n      await provider.waitForTransaction(tx.hash);\n      setLoading(false);\n      console.log(tx);\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  }\n\n  async function Approve(idx) {\n    try {\n      let tx;\n      setLoading(true);\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const policyContract = new Contract(policyAddress, abis.policy, signer);\n      tx = await policyContract.approveRequest(idx); // until transactionHash is mined.\n\n      await provider.waitForTransaction(tx.hash);\n      setLoading(false);\n      console.log(tx);\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  }\n\n  async function Claim(idx) {\n    try {\n      let tx;\n      setLoading(true);\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const policyContract = new Contract(policyAddress, abis.policy, signer);\n      tx = await policyContract.claimRequest(idx); // until transactionHash is mined.\n\n      await provider.waitForTransaction(tx.hash);\n      setLoading(false);\n      console.log(tx);\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    title: \"Stakeholders\",\n    description: \"Stakeholders List.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: classes.container,\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  }, \"Endorser\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, stakeHolders.map((stakeHolder, idx) => /*#__PURE__*/React.createElement(TableRow, {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }\n  }, idx + 1), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 41\n    }\n  }, stakeHoldersAddress[idx])), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 41\n    }\n  }, stakeHolder.userName)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 41\n    }\n  }, endorsers[idx].slice(0, 6) + '...' + endorsers[idx].slice(-4))))))))));\n}","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakeholdersPage.js"],"names":["React","useState","useEffect","Jumbotron","styled","ethers","Contract","RINKEBY_ID","addresses","abis","Link","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Container","Button","CircularProgressWithLabel","Box","Typography","CircularProgress","green","useStyles","theme","table","minWidth","approve","margin","spacing","wrapper","position","buttonProgress","top","left","marginTop","StakeholdersPage","props","classes","policyAddress","setPolicyAddress","requests","setRequests","stakeHolders","setStakeHolders","stakeHoldersAddress","setStakeHoldersAddress","delegatorCount","setDelegatorCount","loading","setLoading","requestCount","setRequestCount","isDelegator","setIsDelegator","endorsers","setEndorsers","getPolicies","provider","providers","Web3Provider","window","ethereum","signer","getSigner","account","getAddress","policyFactoryContract","policyFactory","policiesAddress","deployedPolicies","match","params","id","policy","policyStakeHolders","getPolicyStakeholders","getRequestsCount","registryContract","registry","getDelegatorCount","validDelegators","parseInt","toString","stakeholders","Promise","all","map","address","index","mapInsurers","endorser","delApprove","idx","tx","policyContract","delApproveRequest","waitForTransaction","hash","console","log","err","Approve","approveRequest","Claim","claimRequest","container","stakeHolder","userName","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport CircularProgressWithLabel from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 650,\n    },\n    approve: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n      },\n      buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n      },\n    \n}));\n\nexport default function StakeholdersPage(props) {\n    const classes = useStyles();\n    const [policyAddress, setPolicyAddress] = useState(0);\n    const [requests, setRequests] = useState([]);\n    const [stakeHolders, setStakeHolders] = useState([]);\n    const [stakeHoldersAddress, setStakeHoldersAddress] = useState([]);\n    const [delegatorCount, setDelegatorCount] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [requestCount, setRequestCount] = useState(0);\n    const [isDelegator, setIsDelegator] = useState(false);\n    const [endorsers, setEndorsers] = useState([]);\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            const account = await signer.getAddress()\n\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider)\n            const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id)\n            const policy = new Contract(policiesAddress, abis.policy, provider)\n            const policyStakeHolders = await policy.getPolicyStakeholders();\n            const requestCount = await policy.getRequestsCount();\n            const registryContract = new Contract(addresses[RINKEBY_ID].registry, abis.registry, provider)\n            const delegatorCount = await registryContract.getDelegatorCount()\n            const isDelegator = await registryContract.validDelegators(account)\n\n            setStakeHoldersAddress(policyStakeHolders)\n            setIsDelegator(isDelegator)\n            setRequestCount(requestCount);\n            setDelegatorCount(parseInt(delegatorCount.toString()));\n            setPolicyAddress(policiesAddress)\n            const stakeholders = await Promise.all(\n                policyStakeHolders.map((address, index) => {\n                        return registryContract.mapInsurers(address)\n                    })\n            );\n            const endorsers = await Promise.all(\n                policyStakeHolders.map((endorser, index) => {\n                        return policy.endorser(endorser)\n                    })\n            );\n            setEndorsers(endorsers)\n            setStakeHolders(stakeholders)\n        }\n\n\n        getPolicies();\n    }, []);\n\n\n\n    async function delApprove(idx) {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyContract = new Contract(policyAddress, abis.policy, signer);\n            tx = await policyContract.delApproveRequest(\n                idx\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n    async function Approve(idx) {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyContract = new Contract(policyAddress, abis.policy, signer);\n            tx = await policyContract.approveRequest(\n                idx\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n    async function Claim(idx) {\n        try {\n            let tx;\n            setLoading(true);\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner()\n            const policyContract = new Contract(policyAddress, abis.policy, signer);\n            tx = await policyContract.claimRequest(\n                idx\n            );\n            // until transactionHash is mined.\n            await provider.waitForTransaction(tx.hash);\n            setLoading(false);\n            console.log(tx);\n        } catch (err) {\n            console.log(err)\n        }\n        setLoading(false);\n    }\n\n\n    return (\n        <div>\n            <Jumbotron\n                title=\"Stakeholders\"\n                description=\"Stakeholders List.\" />\n            <Container className={classes.container} maxWidth='lg'>\n\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>ID</TableCell>\n                                <TableCell align=\"right\">Address</TableCell>\n                                <TableCell align=\"right\">Name</TableCell>\n                                <TableCell align=\"right\">Endorser</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {stakeHolders.map((stakeHolder, idx) => (\n                                <TableRow key={idx}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {idx+1}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography color=\"textSecondary\">\n                                            {stakeHoldersAddress[idx]}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography color=\"primary\">\n                                            {stakeHolder.userName}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                        <Typography color=\"textSecondary\">\n                                            {endorsers[idx].slice(0, 6)+'...'+endorsers[idx].slice(-4)}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}