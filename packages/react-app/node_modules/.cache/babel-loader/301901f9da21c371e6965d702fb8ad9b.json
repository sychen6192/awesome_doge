{"ast":null,"code":"var _jsxFileName = \"/Users/sychen/thesis-app/packages/react-app/src/components/Pages/ClaimsPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n  approve: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\nexport default function ClaimsPage(props) {\n  const classes = useStyles();\n  const [policyAddress, setPolicyAddress] = useState(0);\n  const [requests, setRequests] = useState([]);\n  const [stakeHoldersCount, setStakeHoldersCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [requestCount, setRequestCount] = useState(0);\n  useEffect(() => {\n    const getPolicies = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n      const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n      const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id);\n      const policy = new Contract(policiesAddress, abis.policy, provider);\n      const policyStakeHolders = await policy.getPolicyStakeholders();\n      const requestCount = await policy.getRequestsCount();\n      setRequestCount(requestCount);\n      setStakeHoldersCount(policyStakeHolders.length);\n      setPolicyAddress(policiesAddress);\n      const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n        return policy.requests(index);\n      }).reverse());\n      setRequests(requests);\n    };\n\n    getPolicies();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    title: \"Claims\",\n    description: \"Earn rewards by approving claims.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: classes.container,\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"IPFS Content\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"Multiple\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"Requester\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, \"Approve Rate\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, requests.map((request, idx) => /*#__PURE__*/React.createElement(TableRow, {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, requestCount - idx), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, request.description_URI), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }, request.multiple.toString()), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, request.requester.slice(0, 6), \"...\", request.requester.slice(-4)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, parseInt(request.approvalCount.toString()) / stakeHoldersCount, \" %\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.approve,\n    onClick: approve,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  }, \"Approve\")))))))));\n}","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/components/Pages/ClaimsPage.js"],"names":["React","useState","useEffect","Jumbotron","styled","ethers","Contract","RINKEBY_ID","addresses","abis","Link","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Container","useStyles","table","minWidth","approve","margin","theme","spacing","ClaimsPage","props","classes","policyAddress","setPolicyAddress","requests","setRequests","stakeHoldersCount","setStakeHoldersCount","loading","setLoading","requestCount","setRequestCount","getPolicies","provider","providers","Web3Provider","window","ethereum","signer","getSigner","account","getAddress","policyFactoryContract","policyFactory","policiesAddress","deployedPolicies","match","params","id","policy","policyStakeHolders","getPolicyStakeholders","getRequestsCount","length","Promise","all","Array","parseInt","fill","map","element","index","reverse","container","request","idx","description_URI","multiple","toString","requester","slice","approvalCount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    approve: {\n        margin: theme.spacing(3, 0, 2),\n      },\n});\n\nexport default function ClaimsPage(props) {\n    const classes = useStyles();\n    const [policyAddress, setPolicyAddress] = useState(0);\n    const [requests, setRequests] = useState([]);\n    const [stakeHoldersCount, setStakeHoldersCount] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [requestCount, setRequestCount] = useState(0);\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            const account = await signer.getAddress()\n\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider)\n            const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id)\n            const policy = new Contract(policiesAddress, abis.policy, provider)\n            const policyStakeHolders = await policy.getPolicyStakeholders();\n            const requestCount = await policy.getRequestsCount();\n            setRequestCount(requestCount);\n            setStakeHoldersCount(policyStakeHolders.length)\n            setPolicyAddress(policiesAddress)\n\n            const requests = await Promise.all(\n                Array(parseInt(requestCount))\n                    .fill()\n                    .map((element, index) => {\n                        return policy.requests(index);\n                    }).reverse()\n            );\n            setRequests(requests)\n        }\n\n\n        getPolicies();\n    }, []);\n\n\n\n\n\n\n    return (\n        <div>\n            <Jumbotron\n                title=\"Claims\"\n                description=\"Earn rewards by approving claims.\" />\n            <Container className={classes.container} maxWidth='lg'>\n\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>ID</TableCell>\n                                <TableCell align=\"right\">IPFS Content</TableCell>\n                                <TableCell align=\"right\">Multiple</TableCell>\n                                <TableCell align=\"right\">Requester</TableCell>\n                                <TableCell align=\"right\">Approve Rate</TableCell>\n                                <TableCell align=\"right\">Action</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {requests.map((request, idx) => (\n                                <TableRow key={idx}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {requestCount - idx}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{request.description_URI}</TableCell>\n                                    <TableCell align=\"right\">{request.multiple.toString()}</TableCell>\n                                    <TableCell align=\"right\">{request.requester.slice(0, 6)}...{request.requester.slice(-4)}</TableCell>\n                                    <TableCell align=\"right\">{parseInt(request.approvalCount.toString()) / stakeHoldersCount } %</TableCell>\n                                    <TableCell align=\"right\">\n                                        <Button\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.approve}\n                                            onClick={approve}\n                                            >\n                                            Approve\n                                        </Button>\n                                        </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}