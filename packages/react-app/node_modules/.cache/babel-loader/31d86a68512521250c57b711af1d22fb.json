{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar toIterable = require('stream-to-it/source');\n\nvar configure = require('../lib/configure');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _read = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n      var options,\n          res,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          chunk,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('files/read', {\n                timeout: options.timeout,\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: path,\n                  count: options.count || options.length\n                }, options)),\n                headers: options.headers\n              }));\n\n            case 3:\n              res = _context.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 6;\n              _iterator = _asyncIterator(toIterable(res.body));\n\n            case 8:\n              _context.next = 10;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 10:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 14;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 14:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 22;\n                break;\n              }\n\n              chunk = _value;\n              _context.next = 19;\n              return Buffer.from(chunk);\n\n            case 19:\n              _iteratorNormalCompletion = true;\n              _context.next = 8;\n              break;\n\n            case 22:\n              _context.next = 28;\n              break;\n\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 28:\n              _context.prev = 28;\n              _context.prev = 29;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 33;\n                break;\n              }\n\n              _context.next = 33;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 33:\n              _context.prev = 33;\n\n              if (!_didIteratorError) {\n                _context.next = 36;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 36:\n              return _context.finish(33);\n\n            case 37:\n              return _context.finish(28);\n\n            case 38:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 24, 28, 38], [29,, 33, 37]]);\n    }));\n\n    function read(_x) {\n      return _read.apply(this, arguments);\n    }\n\n    return read;\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/files/read.js"],"names":["require","Buffer","toIterable","configure","toUrlSearchParams","module","exports","api","path","options","post","timeout","signal","searchParams","arg","count","length","headers","res","body","chunk","from","read"],"mappings":"AAAA;;;;;;;;;;;;eAEmBA,OAAO,CAAC,QAAD,C;IAAlBC,M,YAAAA,M;;AACR,IAAMC,UAAU,GAAGF,OAAO,CAAC,qBAAD,CAA1B;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AAEAK,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC;AAAA,2EAAO,iBAAuBC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA6BC,cAAAA,OAA7B,2DAAuC,EAAvC;AAAA;AAAA,0CACaF,GAAG,CAACG,IAAJ,CAAS,YAAT,EAAuB;AACvCC,gBAAAA,OAAO,EAAEF,OAAO,CAACE,OADsB;AAEvCC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MAFuB;AAGvCC,gBAAAA,YAAY,EAAET,iBAAiB;AAC7BU,kBAAAA,GAAG,EAAEN,IADwB;AAE7BO,kBAAAA,KAAK,EAAEN,OAAO,CAACM,KAAR,IAAiBN,OAAO,CAACO;AAFH,mBAG1BP,OAH0B,EAHQ;AAQvCQ,gBAAAA,OAAO,EAAER,OAAO,CAACQ;AARsB,eAAvB,CADb;;AAAA;AACCC,cAAAA,GADD;AAAA;AAAA;AAAA;AAAA,yCAYqBhB,UAAU,CAACgB,GAAG,CAACC,IAAL,CAZ/B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAYYC,cAAAA,KAZZ;AAAA;AAaH,qBAAMnB,MAAM,CAACoB,IAAP,CAAYD,KAAZ,CAAN;;AAbG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA,aAAwBE,IAAxB;AAAA;AAAA;;AAAA,WAAwBA,IAAxB;AAAA;AAgBD,CAjByB,CAA1B","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst toIterable = require('stream-to-it/source')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async function * read (path, options = {}) {\n    const res = await api.post('files/read', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.count || options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const chunk of toIterable(res.body)) {\n      yield Buffer.from(chunk)\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"script"}