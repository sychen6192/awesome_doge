{"ast":null,"code":"var _jsxFileName = \"/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nexport default function StakePage() {\n  const [policies, setPolicies] = useState(0);\n  useEffect(() => {\n    const getPolicies = async () => {\n      let policy, summary;\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n      const policies = await policyFactoryContract.getDeloyedPolicies();\n      const allPolicies = await Promise.all(policies.map((address, index) => {\n        policy = new Contract(address, abis.policy, provider);\n        return policy.getSummary();\n      }));\n      setPolicies(allPolicies);\n    };\n\n    getPolicies();\n  }, []);\n\n  function renderList(policies) {\n    if (policies == 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n\n    return Object.values(policies).map((element, idx) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        color: \"textSecondary\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, element[0]), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }\n      }, \"Insurance Type: \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          float: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 37\n        }\n      }, element[1])), /*#__PURE__*/React.createElement(Typography, {\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }, \"adjective\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, \"well meaning and kindly.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }), '\"a benevolent smile\"')), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, \"Learn More\"))) // <div className=\"column\" key={idx} >\n      //         <div className=\"ui segment\" style={{borderRadius: '15px'}} >\n      //             <h4>{element[0]}</h4>\n      //             <p>Insurance Type: <span style={{float: 'right'}}>{element[1]}</span></p>\n      //             <p>Stacked: <span style={{float: 'right'}}>{element[6].toString()} SYC</span></p>\n      //             <p>Insurance Content: <span style={{float: 'right'}}>{element[2]}</span></p>\n      //             <Link className=\"positive ui fluid button\" to={`/staking/${idx}`}>Stake</Link>\n      //         </div>\n      // </div>\n      ;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    title: \"Stake\",\n    description: \"Earn rewards by staking SYC on policies you want to engage.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui three column grid\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, renderList(policies)));\n}","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakePage.js"],"names":["React","useState","useEffect","Jumbotron","styled","ethers","Contract","RINKEBY_ID","addresses","abis","Link","makeStyles","Card","CardActions","CardContent","Button","Typography","StakePage","policies","setPolicies","getPolicies","policy","summary","provider","providers","Web3Provider","window","ethereum","policyFactoryContract","policyFactory","getDeloyedPolicies","allPolicies","Promise","all","map","address","index","getSummary","renderList","Object","values","element","idx","float","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,QAA4C,2BAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,CAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,WAAW,GAAG,YAAY;AAC5B,UAAIC,MAAJ,EAAYC,OAAZ;AACA,YAAMC,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMC,qBAAqB,GAAG,IAAItB,QAAJ,CAAaE,SAAS,CAACD,UAAD,CAAT,CAAsBsB,aAAnC,EAAkDpB,IAAI,CAACoB,aAAvD,EAAsEN,QAAtE,CAA9B;AACA,YAAML,QAAQ,GAAG,MAAMU,qBAAqB,CAACE,kBAAtB,EAAvB;AAEA,YAAMC,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAR,CACtBf,QAAQ,CACHgB,GADL,CACS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrBf,QAAAA,MAAM,GAAG,IAAIf,QAAJ,CAAa6B,OAAb,EAAsB1B,IAAI,CAACY,MAA3B,EAAmCE,QAAnC,CAAT;AACA,eAAOF,MAAM,CAACgB,UAAP,EAAP;AACH,OAJL,CADsB,CAA1B;AAOAlB,MAAAA,WAAW,CAACY,WAAD,CAAX;AACH,KAdD;;AAeAX,IAAAA,WAAW;AACd,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,WAASkB,UAAT,CAAoBpB,QAApB,EAA8B;AAC1B,QAAIA,QAAQ,IAAI,CAAhB,EAAmB;AACf,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AACD,WAAOqB,MAAM,CAACC,MAAP,CAActB,QAAd,EAAwBgB,GAAxB,CAA4B,CAACO,OAAD,EAAUC,GAAV,KAAkB;AACjD,0BACI,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,eAAlB;AAAkC,QAAA,YAAY,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,OAAO,CAAC,CAAD,CADV,CADF,eAIE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACkB;AAAM,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCF,OAAO,CAAC,CAAD,CAAvC,CADlB,CAJF,eAOE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,eAUE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,sBAHH,CAVF,CADA,eAiBA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAjBA,CADJ,CAsBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BJ;AAgCH,KAjCM,CAAP;AAmCH;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,WAAW,EAAC,6DAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,UAAU,CAACpB,QAAD,CADf,CAJJ,CADJ;AAUH","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function StakePage() {\n    const [policies, setPolicies] = useState(0);\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            let policy, summary;\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n            const policies = await policyFactoryContract.getDeloyedPolicies();\n\n            const allPolicies = await Promise.all(\n                policies\n                    .map((address, index) => {\n                        policy = new Contract(address, abis.policy, provider);\n                        return policy.getSummary();\n                    }));\n\n            setPolicies(allPolicies);\n        }\n        getPolicies();\n    }, []);\n\n    function renderList(policies) {\n        if (policies == 0) {\n            return <div>Loading...</div>\n        }\n        return Object.values(policies).map((element, idx) => {\n            return (\n                <Card variant=\"outlined\">\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    {element[0]}\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    Insurance Type: <span style={{float: 'right'}}>{element[1]}</span>\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    adjective\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"p\">\n                    well meaning and kindly.\n                    <br />\n                    {'\"a benevolent smile\"'}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\">Learn More</Button>\n                </CardActions>\n              </Card>\n                // <div className=\"column\" key={idx} >\n                //         <div className=\"ui segment\" style={{borderRadius: '15px'}} >\n                //             <h4>{element[0]}</h4>\n                //             <p>Insurance Type: <span style={{float: 'right'}}>{element[1]}</span></p>\n                //             <p>Stacked: <span style={{float: 'right'}}>{element[6].toString()} SYC</span></p>\n                //             <p>Insurance Content: <span style={{float: 'right'}}>{element[2]}</span></p>\n                //             <Link className=\"positive ui fluid button\" to={`/staking/${idx}`}>Stake</Link>\n                //         </div>\n                // </div>\n            );\n        })\n\n    }\n\n\n    return (\n        <div>\n            <Jumbotron\n                title=\"Stake\"\n                description=\"Earn rewards by staking SYC on policies you want to engage.\" />\n            <div className=\"ui three column grid\" style={{ marginTop: \"20px\" }}>\n                {renderList(policies)}\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}