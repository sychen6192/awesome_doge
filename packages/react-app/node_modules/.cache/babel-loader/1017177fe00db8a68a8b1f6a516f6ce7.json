{"ast":null,"code":"var _jsxFileName = \"/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakeItem.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\nexport default function StakeItem(props) {\n  const [policies, setPolicies] = useState(0);\n  const [minPremium, setminPremium] = useState(0);\n  const [totalDeposit, settotalDeposit] = useState('');\n  const [topupValue, setTopupValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [networkId, setNetworkId] = useState(0);\n  useEffect(() => {\n    async function getNetworkId() {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const networkId = await provider.getNetwork();\n      setNetworkId(networkId.chainId);\n    }\n\n    getNetworkId();\n  }, []);\n  useEffect(() => {\n    const getPolicies = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n      const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n      const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id);\n      const policy = new Contract(policiesAddress, abis.policy, provider);\n      const policyInfo = await policy.getSummary();\n      const stackOf = await policy.stackOf(account);\n      setminPremium(policyInfo[3]);\n      setPolicies(policyInfo);\n      settotalDeposit(stackOf.toString());\n    };\n\n    getPolicies();\n  }, []);\n\n  async function onStake() {\n    setLoading(true);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, signer);\n    const policyAddress = await policyFactoryContract.deployedPolicies(props.match.params.id);\n    const policy = new Contract(policyAddress, abis.policy, signer); // approve\n\n    const erc20Contract = new Contract(addresses[RINKEBY_ID].tokens.SYC, abis.erc20.abi, signer);\n    let tx = await erc20Contract.approve(policyAddress, ethers.utils.parseEther(topupValue));\n    await provider.waitForTransaction(tx.hash);\n    tx = await policy.createStake(topupValue);\n    await provider.waitForTransaction(tx.hash);\n    setLoading(false); // emit event\n  }\n\n  function total() {\n    if (totalDeposit && topupValue) return parseInt(totalDeposit) + parseInt(topupValue);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    title: \"Deposit\",\n    description: \"Stake SYC on your selected project.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `ui big form ${loading ? 'loading' : ''}`,\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"two fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Top Up\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui right labeled input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    onChange: e => setTopupValue(e.target.value),\n    value: topupValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui basic label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"SYC\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Your position\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui right labeled input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    disabled: \"disabled\",\n    value: total(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui basic label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, \"SYC\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui submit button right floated\",\n    onClick: onStake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Stake\")));\n}","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakeItem.js"],"names":["React","useState","useEffect","Jumbotron","styled","ethers","Contract","RINKEBY_ID","addresses","abis","Link","StakeItem","props","policies","setPolicies","minPremium","setminPremium","totalDeposit","settotalDeposit","topupValue","setTopupValue","loading","setLoading","networkId","setNetworkId","getNetworkId","provider","providers","Web3Provider","window","ethereum","getNetwork","chainId","getPolicies","signer","getSigner","account","getAddress","policyFactoryContract","policyFactory","policiesAddress","deployedPolicies","match","params","id","policy","policyInfo","getSummary","stackOf","toString","onStake","policyAddress","erc20Contract","tokens","SYC","erc20","abi","tx","approve","utils","parseEther","waitForTransaction","hash","createStake","total","parseInt","marginTop","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\n\n\n\nexport default function StakeItem(props) {\n    const [policies, setPolicies] = useState(0);\n    const [minPremium, setminPremium] = useState(0);\n    const [totalDeposit, settotalDeposit] = useState('');\n    const [topupValue, setTopupValue] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [networkId, setNetworkId] = useState(0);\n\n    useEffect(() => {\n        async function getNetworkId() {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const networkId = await provider.getNetwork()\n            setNetworkId(networkId.chainId)\n        \n        }\n        getNetworkId();\n    }, [])\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            const account = await signer.getAddress()\n\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider)\n            const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id)\n            const policy = new Contract(policiesAddress, abis.policy, provider)\n            const policyInfo = await policy.getSummary()\n            const stackOf = await policy.stackOf(account)\n\n            setminPremium(policyInfo[3])\n            setPolicies(policyInfo)\n            settotalDeposit(stackOf.toString())\n        }\n\n        getPolicies();\n    }, []);\n\n\n  \n\n    async function onStake() {\n        setLoading(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, signer);\n        const policyAddress = await policyFactoryContract.deployedPolicies(props.match.params.id);\n        const policy = new Contract(policyAddress, abis.policy, signer);\n\n        // approve\n        const erc20Contract = new Contract(addresses[RINKEBY_ID].tokens.SYC, abis.erc20.abi, signer);\n        let tx = await erc20Contract.approve(\n        policyAddress,\n        ethers.utils.parseEther(topupValue)\n        );\n        await provider.waitForTransaction(tx.hash);\n        \n        tx = await policy.createStake(topupValue);\n\n        await provider.waitForTransaction(tx.hash);\n\n        setLoading(false);\n        // emit event\n    }\n\n    function total() {\n        if (totalDeposit && topupValue) return parseInt(totalDeposit)+parseInt(topupValue)\n    }\n\n\n\n    return (\n        <div>\n            <Jumbotron\n                title=\"Deposit\"\n                description=\"Stake SYC on your selected project.\" />\n            <div className={`ui big form ${loading ? 'loading': ''}`} style={{ marginTop: '20px'}}>\n                <div className=\"two fields\">\n                    <div className=\"field\">\n                        <label>Top Up</label>\n                        <div className=\"ui right labeled input\">\n                            <input type=\"number\" onChange={e => setTopupValue(e.target.value)} value={topupValue} />\n                            <div className=\"ui basic label\">\n                                SYC\n                            </div> \n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <label>Your position</label>\n                        <div className=\"ui right labeled input\">\n                            <input type=\"number\" disabled=\"disabled\" value={total()} />\n                            <div className=\"ui basic label\">\n                                SYC\n                            </div>   \n                        </div> \n                    </div>\n                </div>\n                <div className=\"ui submit button right floated\" onClick={onStake}>Stake</div>\n                </div>\n            </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}