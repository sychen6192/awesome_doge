{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"; // Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\n\nconst INFURA_ID = \"66fbccb2856b40b3a622d925568379e9\";\nconst NETWORK_NAME = \"rinkeby\";\n\nfunction useWeb3Modal(config = {}) {\n  const [provider, setProvider] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const {\n    autoLoad = true,\n    infuraId = INFURA_ID,\n    NETWORK = NETWORK_NAME\n  } = config; // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n\n  const web3Modal = new Web3Modal({\n    network: NETWORK,\n    cacheProvider: true,\n    theme: \"dark\",\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId\n        }\n      }\n    }\n  }); // provider.on(\"chainChanged\", (chainId: number) => {\n  //   console.log(chainId);\n  // });\n  // Open wallet selection modal.\n\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n  const logoutOfWeb3Modal = useCallback(async function () {\n    await web3Modal.clearCachedProvider();\n    window.location.reload();\n  }, [web3Modal]); // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && web3Modal.cachedProvider) {\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal.cachedProvider]);\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/hooks/useWeb3Modal.js"],"names":["useCallback","useEffect","useState","Web3Provider","Web3Modal","WalletConnectProvider","INFURA_ID","NETWORK_NAME","useWeb3Modal","config","provider","setProvider","autoLoaded","setAutoLoaded","autoLoad","infuraId","NETWORK","web3Modal","network","cacheProvider","theme","providerOptions","walletconnect","package","options","loadWeb3Modal","newProvider","connect","logoutOfWeb3Modal","clearCachedProvider","window","location","reload","cachedProvider"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC,C,CAEA;AACA;;AACA,MAAMC,SAAS,GAAG,kCAAlB;AAEA,MAAMC,YAAY,GAAG,SAArB;;AAEA,SAASC,YAAT,CAAsBC,MAAM,GAAG,EAA/B,EAAmC;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEY,IAAAA,QAAQ,GAAG,IAAb;AAAmBC,IAAAA,QAAQ,GAAGT,SAA9B;AAAyCU,IAAAA,OAAO,GAAGT;AAAnD,MAAoEE,MAA1E,CAHiC,CAKjC;AACA;;AACA,QAAMQ,SAAS,GAAG,IAAIb,SAAJ,CAAc;AAC9Bc,IAAAA,OAAO,EAAEF,OADqB;AAE9BG,IAAAA,aAAa,EAAE,IAFe;AAG9BC,IAAAA,KAAK,EAAE,MAHuB;AAK9BC,IAAAA,eAAe,EAAE;AACfC,MAAAA,aAAa,EAAE;AACbC,QAAAA,OAAO,EAAElB,qBADI;AAEbmB,QAAAA,OAAO,EAAE;AACPT,UAAAA;AADO;AAFI;AADA;AALa,GAAd,CAAlB,CAPiC,CAqBjC;AACA;AACA;AAGA;;AACA,QAAMU,aAAa,GAAGzB,WAAW,CAAC,YAAY;AAC5C,UAAM0B,WAAW,GAAG,MAAMT,SAAS,CAACU,OAAV,EAA1B;AACAhB,IAAAA,WAAW,CAAC,IAAIR,YAAJ,CAAiBuB,WAAjB,CAAD,CAAX;AACD,GAHgC,EAG9B,CAACT,SAAD,CAH8B,CAAjC;AAKA,QAAMW,iBAAiB,GAAG5B,WAAW,CACnC,kBAAkB;AAChB,UAAMiB,SAAS,CAACY,mBAAV,EAAN;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAJkC,EAKnC,CAACf,SAAD,CALmC,CAArC,CAhCiC,CAwCjC;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,QAAQ,IAAI,CAACF,UAAb,IAA2BK,SAAS,CAACgB,cAAzC,EAAyD;AACvDR,MAAAA,aAAa;AACbZ,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GALQ,EAKN,CAACC,QAAD,EAAWF,UAAX,EAAuBa,aAAvB,EAAsCZ,aAAtC,EAAqDI,SAAS,CAACgB,cAA/D,CALM,CAAT;AAOA,SAAO,CAACvB,QAAD,EAAWe,aAAX,EAA0BG,iBAA1B,CAAP;AACD;;AAED,eAAepB,YAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"66fbccb2856b40b3a622d925568379e9\";\n\nconst NETWORK_NAME = \"rinkeby\";\n\nfunction useWeb3Modal(config = {}) {\n  const [provider, setProvider] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const { autoLoad = true, infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n  const web3Modal = new Web3Modal({\n    network: NETWORK,\n    cacheProvider: true,\n    theme: \"dark\",\n\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId,\n        },\n      },\n    },\n  });\n  // provider.on(\"chainChanged\", (chainId: number) => {\n  //   console.log(chainId);\n  // });\n  \n\n  // Open wallet selection modal.\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n\n  const logoutOfWeb3Modal = useCallback(\n    async function () {\n      await web3Modal.clearCachedProvider();\n      window.location.reload();\n    },\n    [web3Modal],\n  );\n\n  // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && web3Modal.cachedProvider) {\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal.cachedProvider]);\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n"]},"metadata":{},"sourceType":"module"}