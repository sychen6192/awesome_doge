{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sychen/thesis-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar modeToString = require('../lib/mode-to-string');\n\nvar mtimeToObject = require('../lib/mtime-to-object');\n\nvar configure = require('../lib/configure');\n\nvar multipartRequest = require('../lib/multipart-request');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params');\n\nvar anySignal = require('any-signal');\n\nvar AbortController = require('abort-controller');\n\nmodule.exports = configure(function (api) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, input) {\n      var options,\n          controller,\n          signal,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              // allow aborting requests on body errors\n              controller = new AbortController();\n              signal = anySignal([controller.signal, options.signal]);\n              _context.t0 = api;\n              _context.t1 = _objectSpread;\n              _context.t2 = {\n                timeout: options.timeout,\n                signal: signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: path,\n                  streamChannels: true,\n                  count: options.count || options.length\n                }, options))\n              };\n              _context.next = 8;\n              return multipartRequest({\n                content: input,\n                path: 'arg',\n                mode: modeToString(options.mode),\n                mtime: mtimeToObject(options.mtime)\n              }, controller, options.headers);\n\n            case 8:\n              _context.t3 = _context.sent;\n              _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n              _context.next = 12;\n              return _context.t0.post.call(_context.t0, 'files/write', _context.t4);\n\n            case 12:\n              res = _context.sent;\n              _context.next = 15;\n              return res.text();\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["/Users/sychen/thesis-app/node_modules/ipfs-http-client/src/files/write.js"],"names":["modeToString","require","mtimeToObject","configure","multipartRequest","toUrlSearchParams","anySignal","AbortController","module","exports","api","path","input","options","controller","signal","timeout","searchParams","arg","streamChannels","count","length","content","mode","mtime","headers","post","res","text"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA5B;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,wBAAD,CAA7B;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,0BAAD,CAAhC;;AACA,IAAMI,iBAAiB,GAAGJ,OAAO,CAAC,6BAAD,CAAjC;;AACA,IAAMK,SAAS,GAAGL,OAAO,CAAC,YAAD,CAAzB;;AACA,IAAMM,eAAe,GAAGN,OAAO,CAAC,kBAAD,CAA/B;;AAEAO,MAAM,CAACC,OAAP,GAAiBN,SAAS,CAAC,UAAAO,GAAG,EAAI;AAChC;AAAA,wEAAO,iBAAOC,IAAP,EAAaC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoBC,cAAAA,OAApB,2DAA8B,EAA9B;AACL;AACMC,cAAAA,UAFD,GAEc,IAAIP,eAAJ,EAFd;AAGCQ,cAAAA,MAHD,GAGUT,SAAS,CAAC,CAACQ,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAAD,CAHnB;AAAA,4BAKaL,GALb;AAAA;AAAA;AAMHM,gBAAAA,OAAO,EAAEH,OAAO,CAACG,OANd;AAOHD,gBAAAA,MAAM,EAANA,MAPG;AAQHE,gBAAAA,YAAY,EAAEZ,iBAAiB;AAC7Ba,kBAAAA,GAAG,EAAEP,IADwB;AAE7BQ,kBAAAA,cAAc,EAAE,IAFa;AAG7BC,kBAAAA,KAAK,EAAEP,OAAO,CAACO,KAAR,IAAiBP,OAAO,CAACQ;AAHH,mBAI1BR,OAJ0B;AAR5B;AAAA;AAAA,qBAeKT,gBAAgB,CAAC;AACrBkB,gBAAAA,OAAO,EAAEV,KADY;AAErBD,gBAAAA,IAAI,EAAE,KAFe;AAGrBY,gBAAAA,IAAI,EAAEvB,YAAY,CAACa,OAAO,CAACU,IAAT,CAHG;AAIrBC,gBAAAA,KAAK,EAAEtB,aAAa,CAACW,OAAO,CAACW,KAAT;AAJC,eAAD,EAKnBV,UALmB,EAKPD,OAAO,CAACY,OALD,CAfrB;;AAAA;AAAA;AAAA;AAAA;AAAA,iCAKiBC,IALjB,mBAKsB,aALtB;;AAAA;AAKCC,cAAAA,GALD;AAAA;AAAA,qBAwBCA,GAAG,CAACC,IAAJ,EAxBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AA0BD,CA3ByB,CAA1B","sourcesContent":["'use strict'\n\nconst modeToString = require('../lib/mode-to-string')\nconst mtimeToObject = require('../lib/mtime-to-object')\nconst configure = require('../lib/configure')\nconst multipartRequest = require('../lib/multipart-request')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst anySignal = require('any-signal')\nconst AbortController = require('abort-controller')\n\nmodule.exports = configure(api => {\n  return async (path, input, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = anySignal([controller.signal, options.signal])\n\n    const res = await api.post('files/write', {\n      timeout: options.timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.count || options.length,\n        ...options\n      }),\n      ...(\n        await multipartRequest({\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: mtimeToObject(options.mtime)\n        }, controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n})\n"]},"metadata":{},"sourceType":"script"}