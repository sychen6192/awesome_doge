{"ast":null,"code":"var _jsxFileName = \"/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakePage.js\";\nimport React from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\n\nasync function getPolicies() {\n  let policy, name, content, premium, duration, proposer;\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n  const policies = await policyFactoryContract.getDeloyedPolicies();\n  const item = policies.map(async (address, idx) => {\n    policy = new Contract(address, abis.policy, provider);\n    name = await policy.getSummary();\n    console.log(name); // return (\n    //     <div class=\"column\">\n    //         <div className=\"segment\">\n    //             {name}\n    //         </div>\n    //     </div>\n    // )    \n  }); // return <div>{item}</div>\n}\n\nexport default function StakePage() {\n  getPolicies();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    title: \"Stake\",\n    description: \"Earn rewards by staking SYC on policies you want to engage.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui three column grid\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakePage.js"],"names":["React","Jumbotron","styled","ethers","Contract","RINKEBY_ID","addresses","abis","getPolicies","policy","name","content","premium","duration","proposer","provider","providers","Web3Provider","window","ethereum","policyFactoryContract","policyFactory","policies","getDeloyedPolicies","item","map","address","idx","getSummary","console","log","StakePage","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,QAA4C,2BAA5C;;AAEA,eAAeC,WAAf,GAA6B;AACzB,MAAIC,MAAJ,EAAYC,IAAZ,EAAkBC,OAAlB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8CC,QAA9C;AACA,QAAMC,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,QAAMC,qBAAqB,GAAG,IAAIhB,QAAJ,CAAaE,SAAS,CAACD,UAAD,CAAT,CAAsBgB,aAAnC,EAAkDd,IAAI,CAACc,aAAvD,EAAsEN,QAAtE,CAA9B;AACA,QAAMO,QAAQ,GAAG,MAAMF,qBAAqB,CAACG,kBAAtB,EAAvB;AACA,QAAMC,IAAI,GAAIF,QAAQ,CAACG,GAAT,CAAa,OAAOC,OAAP,EAAgBC,GAAhB,KAAwB;AAC/ClB,IAAAA,MAAM,GAAG,IAAIL,QAAJ,CAAasB,OAAb,EAAsBnB,IAAI,CAACE,MAA3B,EAAmCM,QAAnC,CAAT;AACAL,IAAAA,IAAI,GAAG,MAAMD,MAAM,CAACmB,UAAP,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ,EAH+C,CAI/C;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAXa,CAAd,CALyB,CAiBzB;AACH;;AAED,eAAe,SAASqB,SAAT,GAAqB;AAEhCvB,EAAAA,WAAW;AACX,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACA,IAAA,KAAK,EAAC,OADN;AAEA,IAAA,WAAW,EAAC,6DAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,KAAK,EAAE;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AASH","sourcesContent":["import React from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\n\nasync function getPolicies() {\n    let policy, name, content, premium, duration, proposer;\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n    const policies = await policyFactoryContract.getDeloyedPolicies();\n    const item =  policies.map(async (address, idx) => {\n        policy = new Contract(address, abis.policy, provider);\n        name = await policy.getSummary()\n        console.log(name)\n        // return (\n        //     <div class=\"column\">\n        //         <div className=\"segment\">\n        //             {name}\n        //         </div>\n        //     </div>\n        // )    \n    }); \n    // return <div>{item}</div>\n}\n\nexport default function StakePage() {\n\n    getPolicies();\n    return (\n        <div>\n            <Jumbotron \n            title=\"Stake\" \n            description=\"Earn rewards by staking SYC on policies you want to engage.\" />\n            <div className=\"ui three column grid\" style={{ marginTop: \"20px\" }}>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}