{"ast":null,"code":"var _jsxFileName = \"/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakeItem.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\nexport default function StakeItem(props) {\n  const [policies, setPolicies] = useState(0);\n  const [minPremium, setminPremium] = useState(0);\n  const [totalDeposit, settotalDeposit] = useState('');\n  const [topupValue, setTopupValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const getPolicies = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const account = await signer.getAddress();\n      const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider);\n      const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id);\n      const policy = new Contract(policiesAddress, abis.policy, provider);\n      const policyInfo = await policy.getSummary();\n      const stackOf = await policy.stackOf(account);\n      setminPremium(policyInfo[3]);\n      setPolicies(policyInfo);\n      settotalDeposit(stackOf.toString());\n    };\n\n    getPolicies();\n  }, []);\n\n  async function onStake() {\n    setLoading(true);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, signer);\n    const policyAddress = await policyFactoryContract.deployedPolicies(props.match.params.id);\n    const policy = new Contract(policyAddress, abis.policy, signer); // approve\n\n    const erc20Contract = new Contract(addresses[RINKEBY_ID].tokens.SYC, abis.erc20.abi, signer);\n    let tx = await erc20Contract.approve(policyAddress, ethers.utils.parseEther(topupValue));\n    await provider.waitForTransaction(tx.hash);\n    tx = await policy.createStake(topupValue);\n    await provider.waitForTransaction(tx.hash);\n    setLoading(false); // emit event\n  }\n\n  function total() {\n    if (totalDeposit && topupValue) return parseInt(totalDeposit) + parseInt(topupValue);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    title: \"Deposit\",\n    description: \"Stake SYC on your selected project.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: classes.container,\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.CardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.GridContainer,\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.FormContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.max,\n    onClick: e => {\n      onMax();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Max\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.currencyInput,\n    placeholder: \"0\",\n    onChange: e => setETHAmount(e.target.value),\n    value: ETHAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    align: \"right\",\n    className: classes.symbol,\n    display: \"inlign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"ETH\")), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"~$\", (ETHPrice * ETHAmount).toFixed(2)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-exchange-alt fa-2x\",\n    onClick: e => changeDirection(false),\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    style: {\n      cursor: 'not-allowed'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.disabledFormContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    disabled: true,\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"Amount to be received (estimated)\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.currencyInput,\n    disabled: true,\n    style: {\n      cursor: 'not-allowed',\n      background: 'rgb(228, 232, 239)'\n    },\n    value: SYCAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    align: \"right\",\n    className: classes.symbol,\n    display: \"inlign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"SYC\")), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"1 SYC = \", parseFloat(SYCPrice).toFixed(4), \" ETH\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      'marginRight': '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.swapButton,\n    onClick: e => onSwap(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }), !loading && 'SWAP'))))));\n}","map":{"version":3,"sources":["/Users/sychen/thesis-app/packages/react-app/src/components/Pages/StakeItem.js"],"names":["React","useState","useEffect","Jumbotron","styled","ethers","Contract","RINKEBY_ID","addresses","abis","Link","StakeItem","props","policies","setPolicies","minPremium","setminPremium","totalDeposit","settotalDeposit","topupValue","setTopupValue","loading","setLoading","getPolicies","provider","providers","Web3Provider","window","ethereum","signer","getSigner","account","getAddress","policyFactoryContract","policyFactory","policiesAddress","deployedPolicies","match","params","id","policy","policyInfo","getSummary","stackOf","toString","onStake","policyAddress","erc20Contract","tokens","SYC","erc20","abi","tx","approve","utils","parseEther","waitForTransaction","hash","createStake","total","parseInt","classes","container","root","CardContent","GridContainer","FormContent","display","justifyContent","title","max","e","onMax","currencyInput","setETHAmount","target","value","ETHAmount","symbol","pos","ETHPrice","toFixed","alignItems","height","changeDirection","cursor","disabledFormContent","background","SYCAmount","parseFloat","SYCPrice","swapButton","onSwap"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport styled from 'styled-components';\nimport { ethers } from \"ethers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { RINKEBY_ID, addresses, abis } from \"@uniswap-v2-app/contracts\";\nimport { Link } from 'react-router-dom';\n\n\n\nexport default function StakeItem(props) {\n    const [policies, setPolicies] = useState(0);\n    const [minPremium, setminPremium] = useState(0);\n    const [totalDeposit, settotalDeposit] = useState('');\n    const [topupValue, setTopupValue] = useState('');\n    const [loading, setLoading] = useState(false);\n\n\n    useEffect(() => {\n        const getPolicies = async () => {\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\n            const signer = provider.getSigner()\n            const account = await signer.getAddress()\n\n            const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, provider)\n            const policiesAddress = await policyFactoryContract.deployedPolicies(props.match.params.id)\n            const policy = new Contract(policiesAddress, abis.policy, provider)\n            const policyInfo = await policy.getSummary()\n            const stackOf = await policy.stackOf(account)\n\n            setminPremium(policyInfo[3])\n            setPolicies(policyInfo)\n            settotalDeposit(stackOf.toString())\n        }\n\n        getPolicies();\n    }, []);\n\n\n  \n\n    async function onStake() {\n        setLoading(true);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const policyFactoryContract = new Contract(addresses[RINKEBY_ID].policyFactory, abis.policyFactory, signer);\n        const policyAddress = await policyFactoryContract.deployedPolicies(props.match.params.id);\n        const policy = new Contract(policyAddress, abis.policy, signer);\n\n        // approve\n        const erc20Contract = new Contract(addresses[RINKEBY_ID].tokens.SYC, abis.erc20.abi, signer);\n        let tx = await erc20Contract.approve(\n        policyAddress,\n        ethers.utils.parseEther(topupValue)\n        );\n        await provider.waitForTransaction(tx.hash);\n        \n        tx = await policy.createStake(topupValue);\n\n        await provider.waitForTransaction(tx.hash);\n\n        setLoading(false);\n        // emit event\n    }\n\n    function total() {\n        if (totalDeposit && topupValue) return parseInt(totalDeposit)+parseInt(topupValue)\n    }\n\n\n\n    return (\n        <div>\n            <Jumbotron\n                title=\"Deposit\"\n                description=\"Stake SYC on your selected project.\" />\n            <Container className={classes.container} maxWidth='lg'>\n            <Card className={classes.root}>\n                <CardContent className={classes.CardContent}>\n                <Grid container className={classes.GridContainer} spacing={10}>\n                    <Grid item xs={12} sm={5}>\n                    <Card className={classes.FormContent}>\n                        <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\n                        <Typography className={classes.title} color=\"textPrimary\">\n                            Amount\n                        </Typography>\n                        <Button className={classes.max} onClick={e => {onMax()}}>\n                            Max\n                        </Button>\n                        </div>\n                        <div style={{ display: \"flex\" }}>\n                        <input \n                        className={classes.currencyInput}\n                        placeholder=\"0\"\n                        onChange={e => setETHAmount(e.target.value)}\n                        value={ETHAmount}\n                        />\n                        <Button align='right' className={classes.symbol} display='inlign'>\n                        ETH\n                        </Button>\n                        </div>\n                        \n                        <Typography className={classes.pos} color=\"textSecondary\" align='right'>\n                        ~${(ETHPrice * ETHAmount).toFixed(2)}\n                        </Typography>\n                    </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={2}>\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%'}}>\n                        <i \n                        className=\"fas fa-exchange-alt fa-2x\" \n                        onClick={e => changeDirection(false)}\n                        style={{cursor: 'pointer'}} />\n                    </div>\n                    </Grid>\n                    <Grid item xs={12} sm={5} style={{ cursor: 'not-allowed'}}>\n                    <Card className={classes.disabledFormContent}>\n                        <div disabled style={{ display: \"flex\" }}>\n                        <Typography className={classes.title} color=\"textPrimary\">\n                        Amount to be received (estimated)\n                        </Typography>\n                        </div>\n                        <div style={{ display: \"flex\" }}>\n                        <input \n                        className={classes.currencyInput}\n                        disabled\n                        style={{cursor: 'not-allowed', background: 'rgb(228, 232, 239)'}}\n                        value={SYCAmount}\n                        />\n                        <Button align='right' className={classes.symbol} display='inlign'>\n                        SYC\n                        </Button>\n                        </div>\n                        \n                        <Typography className={classes.pos} color=\"textSecondary\" align='right'>\n                        1 SYC = {parseFloat(SYCPrice).toFixed(4)} ETH\n                        </Typography>\n                    </Card>\n                    </Grid>\n                </Grid>\n                <div style={{ 'marginRight': '0' }}>\n                    <Button \n                    variant=\"outlined\" \n                    className={classes.swapButton}\n                    onClick={e => onSwap()}\n                    >\n                    {loading && <CircularProgress size={14} />}\n                    {!loading && 'SWAP'}   \n                    </Button>\n                </div> \n                </CardContent>\n            </Card>\n            </Container>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}